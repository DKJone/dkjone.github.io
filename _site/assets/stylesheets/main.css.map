{
	"version": 3,
	"file": "main.css",
	"sources": [
		"main.scss",
		"_sass/basically-basic/themes/_default.scss",
		"_sass/basically-basic.scss",
		"_sass/basically-basic/vendor/_susy.scss",
		"_sass/basically-basic/vendor/susy/language/_susy.scss",
		"_sass/basically-basic/vendor/susy/_su.scss",
		"_sass/basically-basic/vendor/susy/su/_utilities.scss",
		"_sass/basically-basic/vendor/susy/su/_settings.scss",
		"_sass/basically-basic/vendor/susy/su/_validation.scss",
		"_sass/basically-basic/vendor/susy/su/_grid.scss",
		"_sass/basically-basic/vendor/susy/output/_float.scss",
		"_sass/basically-basic/vendor/susy/output/_shared.scss",
		"_sass/basically-basic/vendor/susy/output/_support.scss",
		"_sass/basically-basic/vendor/susy/output/support/_support.scss",
		"_sass/basically-basic/vendor/susy/output/support/_prefix.scss",
		"_sass/basically-basic/vendor/susy/output/support/_background.scss",
		"_sass/basically-basic/vendor/susy/output/support/_box-sizing.scss",
		"_sass/basically-basic/vendor/susy/output/support/_rem.scss",
		"_sass/basically-basic/vendor/susy/output/support/_clearfix.scss",
		"_sass/basically-basic/vendor/susy/output/shared/_inspect.scss",
		"_sass/basically-basic/vendor/susy/output/shared/_output.scss",
		"_sass/basically-basic/vendor/susy/output/shared/_direction.scss",
		"_sass/basically-basic/vendor/susy/output/shared/_background.scss",
		"_sass/basically-basic/vendor/susy/output/shared/_container.scss",
		"_sass/basically-basic/vendor/susy/output/shared/_margins.scss",
		"_sass/basically-basic/vendor/susy/output/shared/_padding.scss",
		"_sass/basically-basic/vendor/susy/output/float/_container.scss",
		"_sass/basically-basic/vendor/susy/output/float/_span.scss",
		"_sass/basically-basic/vendor/susy/output/float/_end.scss",
		"_sass/basically-basic/vendor/susy/output/float/_isolate.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_settings.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_validation.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_grids.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_box-sizing.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_context.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_background.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_container.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_span.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_gutters.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_isolate.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_gallery.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_rows.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_margins.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_padding.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_bleed.scss",
		"_sass/basically-basic/vendor/susy/language/susy/_breakpoint-plugin.scss",
		"_sass/basically-basic/vendor/_breakpoint.scss",
		"_sass/basically-basic/vendor/breakpoint/_settings.scss",
		"_sass/basically-basic/vendor/breakpoint/_context.scss",
		"_sass/basically-basic/vendor/breakpoint/_helpers.scss",
		"_sass/basically-basic/vendor/breakpoint/_parsers.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/_query.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/_single.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/single/_default.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/_double.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/double/_default-pair.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/double/_double-string.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/double/_default.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/_triple.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/triple/_default.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/_resolution.scss",
		"_sass/basically-basic/vendor/breakpoint/parsers/resolution/_resolution.scss",
		"_sass/basically-basic/vendor/breakpoint/_no-query.scss",
		"_sass/basically-basic/vendor/breakpoint/_respond-to.scss",
		"_sass/basically-basic/vendor/breakpoint/_legacy-settings.scss",
		"_sass/basically-basic/_mixins.scss",
		"_sass/basically-basic/mixins/_color.scss",
		"_sass/basically-basic/mixins/_clearfix.scss",
		"_sass/basically-basic/mixins/_fluid-type.scss",
		"_sass/basically-basic/mixins/_float.scss",
		"_sass/basically-basic/mixins/_image.scss",
		"_sass/basically-basic/mixins/_lists.scss",
		"_sass/basically-basic/mixins/_text-truncate.scss",
		"_sass/basically-basic/_variables.scss",
		"_sass/basically-basic/_reset.scss",
		"_sass/basically-basic/_base.scss",
		"_sass/basically-basic/_layout.scss",
		"_sass/basically-basic/_tables.scss",
		"_sass/basically-basic/_global.scss",
		"_sass/basically-basic/_sidebar.scss",
		"_sass/basically-basic/_navigation.scss",
		"_sass/basically-basic/_footer.scss",
		"_sass/basically-basic/_entries.scss",
		"_sass/basically-basic/_buttons.scss",
		"_sass/basically-basic/_icons.scss",
		"_sass/basically-basic/_intro.scss",
		"_sass/basically-basic/_navicons.scss",
		"_sass/basically-basic/_contact-lists.scss",
		"_sass/basically-basic/_syntax-highlighting.scss",
		"_sass/basically-basic/_responsive-embed.scss",
		"_sass/basically-basic/_utilities.scss",
		"_sass/basically-basic/utilities/_accessibility.scss",
		"_sass/basically-basic/utilities/_align.scss",
		"_sass/basically-basic/utilities/_clearfix.scss",
		"_sass/basically-basic/utilities/_float.scss",
		"_sass/basically-basic/utilities/_text.scss",
		"_sass/basically-basic/_print.scss"
	],
	"sourcesContent": [
		"@charset \"utf-8\";\n\n// Theme skin\n@import \"basically-basic/themes/default\";\n\n@import \"basically-basic\";",
		"/* ==========================================================================\n   Default theme skin\n   ========================================================================== */\n\n// Intentionally left blank\n",
		"/*!\n * Basically Basic Jekyll Theme 1.1.3\n * Copyright 2017 Michael Rose - mademistakes | @mmistakes\n * Free for personal and commercial use under the MIT license\n * https://github.com/mmistakes/jekyll-theme-basically-basic/blob/master/LICENSE.md\n*/\n\n/* Mixins and functions */\n@import \"basically-basic/vendor/susy\";\n@import \"basically-basic/vendor/breakpoint\";\n@include breakpoint-set(\"to ems\", true);\n@import \"basically-basic/mixins\";\n\n/* Variables */\n@import \"basically-basic/variables\";\n\n/* Core CSS */\n@import \"basically-basic/reset\";\n@import \"basically-basic/base\";\n@import \"basically-basic/layout\";\n@import \"basically-basic/tables\";\n\n/* Components */\n@import \"basically-basic/global\";\n@import \"basically-basic/sidebar\";\n@import \"basically-basic/navigation\";\n@import \"basically-basic/footer\";\n@import \"basically-basic/entries\";\n@import \"basically-basic/buttons\";\n@import \"basically-basic/icons\";\n@import \"basically-basic/intro\";\n@import \"basically-basic/navicons\";\n@import \"basically-basic/contact-lists\";\n@import \"basically-basic/syntax-highlighting\";\n@import \"basically-basic/responsive-embed\";\n\n/* Utility classes */\n@import \"basically-basic/utilities\";\n\n/* Print */\n@import \"basically-basic/print\";\n",
		"// Susy\n// ====\n\n@import 'susy/language/susy';\n",
		"// Susy Next Syntax\n// ================\n\n$susy-version: 2.1;\n\n@import \"../su\";\n@import \"../output/float\";\n\n@import \"susy/settings\";\n@import \"susy/validation\";\n@import \"susy/grids\";\n@import \"susy/box-sizing\";\n@import \"susy/context\";\n@import \"susy/background\";\n@import \"susy/container\";\n@import \"susy/span\";\n@import \"susy/gutters\";\n@import \"susy/isolate\";\n@import \"susy/gallery\";\n@import \"susy/rows\";\n@import \"susy/margins\";\n@import \"susy/padding\";\n@import \"susy/bleed\";\n@import \"susy/breakpoint-plugin\";\n",
		"// Su\n// ==\n\n@import \"su/utilities\";\n@import \"su/settings\";\n@import \"su/validation\";\n@import \"su/grid\";\n",
		"// Map Functions\n// =============\n\n\n// Truncate List\n// -------------\n// - Return a list, truncated to a given length\n@function _susy-truncate-list(\n  $list,\n  $length\n) {\n  $_return: ();\n\n  @for $i from 1 through length($list) {\n    $_return: if($i <= $length, append($_return, nth($list, $i)), $_return);\n  }\n\n  @return $_return;\n}\n\n\n// Deep Get\n// --------\n// - Return a value deep in nested maps\n@function _susy-deep-get(\n  $map,\n  $keys...\n) {\n  $_return: $map;\n\n  @each $key in $keys {\n    @if type-of($_return) == map {\n      $_return: map-get($_return, $key);\n    }\n  }\n\n  @return $_return;\n}\n\n\n// Deep Set\n// --------\n// - Set a value deep in nested maps\n@function _susy-deep-set(\n  $map,\n  $keys-value...\n) {\n  $_value: nth($keys-value, -1);\n  $_keys: _susy-truncate-list($keys-value, length($keys-value) - 1);\n  $_length: length($_keys);\n  $_return: ();\n\n  @for $i from 1 through $_length {\n    $_n: 0 - $i;\n    $_level: _susy-truncate-list($_keys, $_length + $_n);\n    $_level: _susy-deep-get($map, $_level...);\n    $_merge: nth($_keys, $_n);\n    $_merge: ($_merge: $_value);\n    $_return: if($_level, map-merge($_level, $_merge), $_merge);\n    $_value: $_return;\n  }\n\n  @return $_return;\n}\n\n\n// Deep Merge\n// ----------\n// Return 2 objects of any depth, merged\n@function _susy-deep-merge(\n  $map1,\n  $map2\n) {\n\n  @if type-of($map1) != map or type-of($map2) != map {\n    $map1: $map2;\n  } @else {\n    @each $key, $value in $map2 {\n      $_new: ($key: _susy_deep-merge(map-get($map1, $key), $value));\n      $map1: map-merge($map1, $_new);\n    }\n  }\n\n  @return $map1;\n}\n\n\n// Deep Has-Key\n// ------------\n// - Return true if a deep key exists\n@function _susy-deep-has-key(\n  $map,\n  $keys...\n) {\n  $_return: null;\n  $_stop: false;\n\n  @each $key in $keys {\n    @if not($_stop) {\n      $_return: map-has-key($map, $key);\n    }\n\n    @if $_return {\n      $map: map-get($map, $key);\n    } @else {\n      $_stop: true;\n    }\n  }\n\n  @return $_return;\n}\n",
		"// Settings\n// ========\n\n// Version\n// -------\n$su-version: 1.1;\n\n\n// Default Settings\n// ----------------\n// PRIVATE: The basic settings\n$susy-defaults: (\n  columns: 4,\n  gutters: .25,\n);\n\n\n// User Settings\n// -------------\n// - Define the $susy variable with a map of your own settings.\n// - Set EITHER $column-width OR $container\n// - Use $column-width for static layouts\n$susy: () !default;\n\n\n// Susy Defaults\n// -------------\n// PRIVATE: Add defaults to Susy\n@mixin susy-defaults(\n  $defaults\n) {\n  $susy-defaults: map-merge($susy-defaults, $defaults) !global;\n}\n\n\n// Susy Set\n// --------\n// Change one setting\n// - $key   : setting name\n// - $value : setting value\n@mixin susy-set(\n  $key-value...\n) {\n  $susy: _susy-deep-set($susy, $key-value...) !global;\n}\n\n\n// Susy Get\n// --------\n// Return one setting from a grid\n// - $key     : <keyword>\n// - $layout  : <settings>\n@function susy-get(\n  $key,\n  $layout: map-merge($susy-defaults, $susy)\n) {\n  $layout: parse-grid($layout);\n  $_options: $layout $susy $susy-defaults;\n  $_break: false;\n  $_return: null;\n\n  @each $opt in $_options {\n    @if type-of($opt) == map and not($_break) {\n      $_keyset: _susy-deep-has-key($opt, $key...);\n      @if $_keyset {\n        $_return: _susy-deep-get($opt, $key...);\n        $_break: true;\n      }\n    }\n  }\n\n  @return $_return;\n}\n",
		"// Math Validation\n// ===============\n\n\n// Valid Columns\n// -------------\n// Check that a column setting is valid.\n@function valid-columns(\n  $columns,\n  $silent: false\n) {\n  $type: type-of($columns);\n  $return: null;\n\n  @if $type == number and unitless($columns) {\n    $return: $columns;\n  } @else if $type == list {\n    $fail: null;\n    @each $col in $columns {\n      @if type-of($col) == number {\n        $fail: $fail or if(unitless($col), null, true);\n      } @else {\n        $fail: true;\n      }\n    }\n    $return: if($fail, $return, $columns);\n  }\n\n  @if $return != $columns and not($silent) {\n    $return: null;\n    $warn: '$columns must be a unitless number or list of unitless numbers.';\n    @warn $warn + ' Current value [#{$type}]: #{$columns}';\n  }\n\n  @return $return;\n}\n\n\n// Valid Gutters\n// -------------\n// Check that a gutter setting is valid.\n@function valid-gutters(\n  $gutters,\n  $silent: false\n) {\n  $type: type-of($gutters);\n  $return: null;\n\n  @if $type == number and unitless($gutters) {\n    $return: $gutters;\n  } @else if not($silent) {\n    $warn: '$gutters must be a unitless number.';\n    @warn $warn + ' Current value [#{$type}]: #{$gutters}';\n  }\n\n  @return $return;\n}\n",
		"// Column math\n// ===========\n\n\n// Is Symmetrical\n// --------------\n// Returns true if a grid is symmetrical.\n// - [$columns]   : <number> | <list>\n@function is-symmetrical(\n  $columns: susy-get(columns)\n) {\n  $columns: valid-columns($columns);\n  @return if(type-of($columns) == number, $columns, null);\n}\n\n\n// Susy Count\n// ----------\n// Find the number of columns in a given layout\n// - [$columns]   : <number> | <list>\n@function susy-count(\n  $columns: susy-get(columns)\n) {\n  $columns: valid-columns($columns);\n  @return is-symmetrical($columns) or length($columns);\n}\n\n\n// Susy Sum\n// --------\n// Find the total sum of column-units in a layout\n// - [$columns]   : <number> | <list>\n// - [$gutters]   : <ratio>\n// - [$spread]    : false/narrow | wide | wider\n@function susy-sum(\n  $columns  : susy-get(columns),\n  $gutters  : susy-get(gutters),\n  $spread   : false\n) {\n  $columns: valid-columns($columns);\n  $gutters: valid-gutters($gutters);\n\n  $spread: if($spread == wide, 0, if($spread == wider, 1, -1));\n  $gutter-sum: (susy-count($columns) + $spread) * $gutters;\n  $column-sum: is-symmetrical($columns);\n\n  @if not($column-sum) {\n    @each $column in $columns {\n      $column-sum: ($column-sum or 0) + $column;\n    }\n  }\n\n  @return $column-sum + $gutter-sum;\n}\n\n\n// Susy Slice\n// ----------\n// Return a subset of columns at a given location.\n// - $span        : <number>\n// - $location    : <number>\n// - [$columns]   : <number> | <list>\n@function susy-slice(\n  $span,\n  $location,\n  $columns: susy-get(columns)\n) {\n  $columns: valid-columns($columns);\n  $sub-columns: $span;\n\n  @if not(is-symmetrical($columns)) {\n    $location: $location or 1;\n    $sub-columns: ();\n    @for $i from $location to ($location + $span) {\n      $sub-columns: append($sub-columns, nth($columns, $i));\n    }\n  }\n\n  @return $sub-columns;\n}\n\n\n// Susy\n// ----\n// Find the sum of a column-span.\n// - $span        : <number>\n// - $location    : <number>\n// - [$columns]   : <number> | <list>\n// - [$gutters]   : <ratio>\n// - [$spread]    : false/narrow | wide | wider\n@function susy(\n  $span,\n  $location     : false,\n  $columns      : susy-get(columns),\n  $gutters      : susy-get(gutters),\n  $spread       : false\n) {\n  $columns: valid-columns($columns);\n  $gutters: valid-gutters($gutters);\n  $span: susy-slice($span, $location, $columns);\n\n  @return susy-sum($span, $gutters, $spread);\n}\n",
		"// Float API\n// =========\n\n@import \"shared\";\n\n@import \"float/container\";\n@import \"float/span\";\n@import \"float/end\";\n@import \"float/isolate\";\n",
		"// Shared API\n// ==========\n\n@import \"support\";\n\n@import \"shared/inspect\";\n@import \"shared/output\";\n@import \"shared/direction\";\n@import \"shared/background\";\n@import \"shared/container\";\n@import \"shared/margins\";\n@import \"shared/padding\";\n\n\n\n",
		"// Susy Browser Support\n// ====================\n\n@import \"support/support\";\n@import \"support/prefix\";\n@import \"support/background\";\n@import \"support/box-sizing\";\n@import \"support/rem\";\n@import \"support/clearfix\";\n",
		"// Browser Support\n// ===============\n\n// Susy Support Defaults\n// ---------------------\n@include susy-defaults((\n  use-custom: (\n    clearfix: false,\n    background-image: true,\n    background-options: false,\n    breakpoint: true,\n    box-sizing: true,\n    rem: true,\n  ),\n));\n\n\n// Susy Support [mixin]\n// --------------------\n// Send property-value pairs to the proper support modules.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-support(\n  $prop,\n  $val\n) {\n  // Background Support\n  @if $prop == background-image {\n    @include susy-background-image($val);\n  } @else if $prop == background-size {\n    @include susy-background-size($val);\n  } @else if $prop == background-origin {\n    @include susy-background-origin($val);\n  } @else if $prop == background-clip {\n    @include susy-background-clip($val);\n  }\n\n  // Box-Sizing Support\n  @else if $prop == box-sizing {\n    @include susy-box-sizing($val);\n  }\n\n  // Rem Support\n  @else {\n    @include susy-rem($prop, $val);\n  }\n}\n\n\n// Susy Support [function]\n// -----------------------\n// Check for support of a feature.\n// - $feature       : <string>\n//                    - e.g \"rem\" or \"box-sizing\"\n// - $requirements  : <map>\n//                    - e.g (variable: rem-with-px-fallback, mixin: rem)\n// - $warn          : <bool>\n@function susy-support(\n  $feature,\n  $requirements: (),\n  $warn: true\n) {\n  $_support: susy-get(use-custom $feature);\n\n  @if $_support {\n    $_fail: false;\n\n    @each $_type, $_req in $requirements {\n      @each $_i in $_req {\n        $_pass: call(unquote(\"#{$_type}-exists\"), $_i);\n\n        @if not($_pass) {\n          $_fail: true;\n          @if $warn {\n            @warn \"You requested custom support of #{$feature}, but the #{$_i} #{$_type} is not available.\";\n          }\n        }\n      }\n    }\n\n    $_support: if($_fail, false, $_support);\n  }\n\n  @return $_support;\n}\n",
		"// Susy Prefix\n// ===========\n\n// Prefix\n// ------\n// Output simple prefixed properties.\n// - $prop      : <css property>\n// - $val       : <css value>\n// - [$prefix]  : <browser prefix list>\n@mixin susy-prefix(\n  $prop,\n  $val,\n  $prefix: official\n) {\n  @each $fix in $prefix {\n    $fix: if($fix == official or not($fix), $prop, '-#{$fix}-#{$prop}');\n    @include susy-rem($fix, $val);\n  }\n}\n",
		"// Background Properties\n// =====================\n\n// Susy Background Image\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-image>\n@mixin susy-background-image(\n  $image\n) {\n  @if susy-support(background-image, (mixin: background-image), $warn: false) {\n    @include background-image($image...);\n  } @else {\n    background-image: $image;\n  }\n}\n\n// Susy Background Size\n// ---------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-size>\n@mixin susy-background-size(\n  $size\n) {\n  @if susy-support(background-options, (mixin: background-size)) {\n    @include background-size($size);\n  } @else {\n    background-size: $size;\n  }\n}\n\n// Susy Background Origin\n// ----------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-origin>\n@mixin susy-background-origin(\n  $origin\n) {\n  @if susy-support(background-options, (mixin: background-origin)) {\n    @include background-origin($origin);\n  } @else {\n    background-origin: $origin;\n  }\n}\n\n// Susy Background Clip\n// --------------------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $image: <background-clip>\n@mixin susy-background-clip(\n  $clip\n) {\n  @if susy-support(background-options, (mixin: background-clip)) {\n    @include background-clip($clip);\n  } @else {\n    background-clip: $clip;\n  }\n}\n",
		"// Box Sizing\n// ==========\n\n// Box Sizing\n// ----------\n// Check for an existing support mixin, or provide a simple fallback.\n// - $model: <box-sizing>\n@mixin susy-box-sizing(\n  $model: content-box\n) {\n  @if $model {\n    @if susy-support(box-sizing, (mixin: box-sizing), $warn: false) {\n      @include box-sizing($model);\n    } @else {\n      $prefix: (moz, webkit, official);\n      @include susy-prefix(box-sizing, $model, $prefix);\n    }\n  }\n}\n",
		"// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n",
		"// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n",
		"// Debugging\n// =========\n\n// Susy Inspect\n// ------------\n// Output arguments passed to a inspect.\n// - $mixin  : <susy mixin>\n// - $inspec   : <mixin arguments>\n\n@mixin susy-inspect(\n  $mixin,\n  $inspect\n) {\n  $show: false;\n\n  @each $item in $inspect {\n    @if index($item, inspect) {\n      $show: true;\n    }\n  }\n\n  @if $show or susy-get(debug inspect) {\n    -susy-#{$mixin}: inspect($inspect);\n  }\n}\n",
		"// Output\n// ======\n\n// Output\n// ------\n// Output CSS with proper browser support.\n// - $styles  : <map of css property-value pairs>\n@mixin output(\n  $styles\n) {\n  @each $prop, $val in $styles {\n    @include susy-support($prop, $val);\n  }\n}\n",
		"// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n",
		"// Grid Background API\n// ===================\n// - Sub-pixel rounding can lead to several pixels variation between browsers.\n\n// Grid Background Output\n// ----------------------\n// - $image: background-image\n// - $size: background-size\n// - $clip: background-clip\n// - [$flow]: ltr | rtl\n@mixin background-grid-output (\n  $image,\n  $size: null,\n  $clip: null,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    background-image: $image,\n    background-size: $size,\n    background-origin: $clip,\n    background-clip: $clip,\n    background-position: from($flow) top,\n  );\n\n  @include output($output);\n}\n",
		"// Shared Container API\n// ====================\n\n// Container Output\n// ----------------\n// - [$width]         : <length>\n// - [$justify]       : left | center | right\n// - [$math]          : fluid | static\n@mixin container-output(\n  $width,\n  $justify: auto auto,\n  $property: max-width\n) {\n  $output: (\n    #{$property}: $width or 100%,\n    margin-left: nth($justify, 1),\n    margin-right: nth($justify, 2),\n  );\n\n  @include output($output);\n}\n",
		"// Margins API\n// ===========\n\n// Margin Output\n// -------------\n// - $before  : <length>\n// - $after   : <length>\n// - [$flow]  : ltr | rtl\n@mixin margin-output(\n  $before,\n  $after,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $to: to($flow);\n  $from: from($flow);\n\n  $output: (\n    margin-#{$from}: $before,\n    margin-#{$to}: $after,\n  );\n\n  @include output($output);\n}\n",
		"// Padding API\n// ===========\n\n// Padding Output\n// --------------\n// - $before  : <length>\n// - $after   : <length>\n// - [$flow]  : ltr | rtl\n@mixin padding-output(\n  $before,\n  $after,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $to: to($flow);\n  $from: from($flow);\n\n  $output: (\n    padding-#{$from}: $before,\n    padding-#{$to}: $after,\n  );\n\n  @include output($output);\n}\n",
		"// Float Container API\n// ===================\n\n// Float Container\n// ---------------\n// - [$width]         : <length>\n// - [$justify]       : left | center | right\n// - [$math]   : fluid | static\n@mixin float-container(\n  $width,\n  $justify: auto auto,\n  $property: max-width\n) {\n  @include susy-clearfix;\n  @include container-output($width, $justify, $property);\n}\n",
		"// Float Span API\n// ==============\n\n// Float Span Output\n// -----------------\n// - $width             : <length>\n// - [$float]           : from | to\n// - [$margin-before]   : <length>\n// - [$margin-after]    : <length>\n// - [$padding-before]  : <length>\n// - [$padding-after]   : <length>\n// - [$flow]            : ltr | rtl\n@mixin float-span-output(\n  $width,\n  $float            : from,\n  $margin-before    : null,\n  $margin-after     : null,\n  $padding-before   : null,\n  $padding-after    : null,\n  $flow             : map-get($susy-defaults, flow)\n) {\n  $to     : to($flow);\n  $from   : from($flow);\n\n  $output: (\n    width: $width,\n    float: if($float == to, $to, null) or if($float == from, $from, null),\n    margin-#{$from}: $margin-before,\n    margin-#{$to}: $margin-after,\n    padding-#{$from}: $padding-before,\n    padding-#{$to}: $padding-after,\n  );\n\n  @include output($output);\n}\n",
		"// Float Ends API\n// ==============\n\n// Susy End Defaults\n// -----------------\n// - PRIVATE\n@include susy-defaults((\n  last-flow: to,\n));\n\n// Float Last\n// ----------\n// - [$flow]  : ltr | rtl\n@mixin float-last(\n  $flow: map-get($susy-defaults, flow),\n  $last-flow: map-get($susy-defaults, last-flow),\n  $margin: 0\n) {\n  $to: to($flow);\n\n  $output: (\n    float: if($last-flow == to, $to, null),\n    margin-#{$to}: $margin,\n  );\n\n  @include output($output);\n}\n\n// Float First\n// -----------\n// - [$flow]  : ltr | rtl\n@mixin float-first(\n  $flow: map-get($susy-defaults, flow)\n) {\n  $output: (\n    margin-#{from($flow)}: 0,\n  );\n\n  @include output($output);\n}\n",
		"// Float Isolation API\n// ===================\n\n// Isolate Output\n// --------------\n// - $push    : <length>\n// - [$flow]  : ltr | rtl\n@mixin isolate-output(\n  $push,\n  $flow: map-get($susy-defaults, flow)\n) {\n  $to: to($flow);\n  $from: from($flow);\n\n  $output: (\n    float: $from,\n    margin-#{$from}: $push,\n    margin-#{$to}: -100%,\n  );\n\n  @include output($output);\n}\n",
		"// Susy Settings\n// =============\n\n// Susy Language Defaults\n// ----------------------\n// - PRIVATE\n@include susy-defaults((\n  container: auto,\n  math: fluid,\n  output: float,\n  container-position: center,\n  gutter-position: after,\n  global-box-sizing: content-box,\n  debug: (\n    image: hide,\n    color: rgba(#66f, .25),\n    output: background,\n    toggle: top right,\n  ),\n));\n\n\n// Valid Keyword Values\n// --------------------\n// - PRIVATE: DONT'T TOUCH\n$susy-keywords: (\n  container: auto,\n  math: static fluid,\n  output: isolate float,\n  container-position: left center right,\n  flow: ltr rtl,\n  gutter-position: before after split inside inside-static,\n  box-sizing: border-box content-box,\n  span: full,\n  edge: first alpha last omega full,\n  spread: narrow wide wider,\n  gutter-override: no-gutters no-gutter,\n  role: nest,\n  clear: break nobreak,\n  debug image: show hide show-columns show-baseline,\n  debug output: background overlay,\n);\n\n\n// Parse Susy Keywords and Maps\n// ----------------------------\n@function parse-settings(\n  $short: $susy\n) {\n  $_return: ();\n\n  @if type-of($short) == map {\n    $_return: $short;\n  } @else {\n    @each $item in $short {\n      // strings\n      @if type-of($item) == string {\n        @each $key, $value in $susy-keywords {\n          @if index($value, $item) {\n            $_key-value: append($key, $item);\n            $_return: _susy-deep-set($_return, $_key-value...);\n          }\n        }\n      // maps\n      } @else if type-of($item) == map {\n        $_return: map-merge($_return, $item);\n      }\n    }\n  }\n\n  @return $_return;\n}\n\n\n// Parse Columns & Gutters\n// -----------------------\n@function parse-layout(\n  $short\n) {\n  $_return: ();\n  $_columns: ();\n  $_gutters: null;\n\n  @if not(unitless(nth(nth($short, 1), 1))) {\n    $_gutters: nth($short, 1);\n  } @else {\n    $_columns: (columns: nth($short, 1));\n    $_gutters: if(length($short) > 1, nth($short, 2), $_gutters);\n  }\n\n  @if type-of($_gutters) == list and length($_gutters) > 0 {\n    $_gutters: (\n      gutters: nth($_gutters, 2) / nth($_gutters, 1),\n      column-width: nth($_gutters, 1),\n    );\n  } @else {\n    $_gutters: if($_gutters, (gutters: $_gutters), ());\n  }\n\n  $_return: map-merge($_return, $_columns);\n  $_return: map-merge($_return, $_gutters);\n\n  @return $_return;\n}\n\n\n// Parse Grid/Context\n// ------------------\n@function parse-grid(\n  $short: $susy\n) {\n  $_return: parse-settings($short);\n  $_layout: ();\n\n  @if type-of($short) == map {\n    $_return: $short;\n  } @else {\n    @each $item in $short {\n      // number or list\n      @if type-of($item) == number or type-of($item) == list {\n        @if type-of($item) == list or unitless($item) {\n          $_layout: append($_layout, $item);\n        } @else {\n          $_return: map-merge($_return, (container: $item));\n        }\n      }\n    }\n\n    $_layout: if(length($_layout) > 0, parse-layout($_layout), $_layout);\n  }\n\n  @return map-merge($_return, $_layout);\n}\n\n\n// Parse Span\n// ----------\n@function parse-span(\n  $short,\n  $key: span\n) {\n  $_return: ();\n\n  @if type-of($short) == map {\n    $_return: $short;\n  } @else {\n    $_at: index($short, at);\n\n    @if $_at {\n      $_loci: $_at + 1;\n      $_location: nth($short, $_loci);\n      $_return: map-merge($_return, (location: $_location));\n      $short: set-nth($short, $_at, null);\n      $short: set-nth($short, $_loci, null);\n    }\n\n    $_i: 1;\n    $_span: ();\n\n    @while $_i <= length($short) {\n      $_this: nth($short, $_i);\n\n      @if type-of($_this) == number {\n        $_span: append($_span, $_this);\n        $short: set-nth($short, $_i, null);\n      } @else if $_this == of {\n        $short: set-nth($short, $_i, null);\n        $_i: length($short) + 1;\n      }\n\n      $_i: $_i + 1;\n    }\n\n    @if length($_span) > 0 {\n      $_span: if(length($_span) == 1, nth($_span, 1), $_span);\n      $_return: map-merge($_return, ($key: $_span));\n    }\n\n    $_return: map-merge($_return, parse-grid($short));\n  }\n\n  @return $_return;\n}\n\n\n// Parse Gutters\n// -------------\n@function parse-gutters(\n  $short: $susy\n) {\n  $_gutters: parse-span($short, gutter-override);\n  $_span: susy-get(gutter-override, $_gutters);\n\n  @if $_span and not(map-get($_gutters, columns)) {\n    $_context: ();\n    $_new: ();\n\n    @each $item in $_span {\n      @if type-of($item) == number and unitless($item) {\n        $_context: append($_context, $item);\n      } @else {\n        $_new: append($_new, $item);\n      }\n    }\n\n    $_context: parse-grid($_context);\n    $_new: if(length($_new) == 0, null, $_new);\n    $_new: if(length($_new) == 1, nth($_new, 1), $_new);\n    $_new: (gutter-override: if($_new != $_span, $_new, $_span));\n\n    $_gutters: map-merge($_gutters, $_new);\n    $_gutters: map-merge($_gutters, $_context);\n  }\n\n  @return $_gutters;\n}\n",
		"// Validation\n// ==========\n\n\n// Validate Column Math\n// --------------------\n@function valid-column-math(\n  $math,\n  $column-width\n) {\n  @if $math == static and not($column-width) {\n    @error 'Static math requires a valid column-width setting.';\n  }\n\n  @return $column-width;\n}\n",
		"// Grid Syntax\n// ===========\n\n\n// Layout\n// ------\n// Set a new layout using a shorthand\n// - $layout: <settings>\n// - $clean: boolean\n@mixin layout(\n  $layout,\n  $clean: false\n) {\n  $inspect  : $layout;\n  $susy     : _get-layout($layout, $clean) !global;\n\n  @include susy-inspect(layout, $inspect);\n}\n\n\n// Use Grid\n// --------\n// Use an arbitrary layout for a section of code\n// - $layout: <settings>\n// - $clean: boolean\n@mixin with-layout(\n  $layout,\n  $clean: false\n) {\n  $inspect  : $layout;\n  $old      : $susy;\n  $susy     : _get-layout($layout, $clean) !global;\n\n  @include susy-inspect(with-layout, $inspect);\n\n  @content;\n\n  $susy: $old !global;\n}\n\n\n// Layout\n// ------\n// Return a parsed layout map based on shorthand syntax\n// - $layout: <settings>\n@function layout(\n  $layout: $susy\n) {\n  @return parse-grid($layout);\n}\n\n\n// Get Layout\n// ----------\n// Return a new layout based on current and given settings\n// - $layout: <settings>\n// - $clean: boolean\n@function _get-layout(\n  $layout,\n  $clean: false\n) {\n  $layout: layout($layout);\n  @return if($clean, $layout, _susy-deep-merge($susy, $layout));\n}\n",
		"// Susy Box Sizing\n// =================\n\n// Global Box Sizing\n// -----------------\n// Set a box model globally on all elements.\n// - [$box]: border-box | content-box\n// - [$inherit]: true | false\n@mixin global-box-sizing(\n  $box: susy-get(global-box-sizing),\n  $inherit: false\n) {\n  $inspect: $box;\n\n  @if $inherit {\n    @at-root {\n       html { @include output((box-sizing: $box)); }\n       *, *:before, *:after { box-sizing: inherit; }\n     }\n  } @else {\n    *, *:before, *:after { @include output((box-sizing: $box)); }\n  }\n\n  @include susy-inspect(global-box-sizing, $inspect);\n  @include update-box-model($box);\n}\n\n// Border Box Sizing\n// -----------------\n// A legacy shortcut...\n// - [$inherit]: true | false\n@mixin border-box-sizing(\n  $inherit: false\n) {\n  @include global-box-sizing(border-box, $inherit);\n}\n\n// Update Box Model\n// ----------------\n// PRIVATE: Updates global box model setting\n@mixin update-box-model(\n  $box\n) {\n  @if $box != susy-get(global-box-sizing) {\n  @include susy-set(global-box-sizing, $box);\n  }\n}\n",
		"// Context Syntax\n// ==============\n\n// Nested [function]\n// -----------------\n// Return a subset grid for nested context.\n// - $context   : <span>\n@function nested(\n  $context\n) {\n  $context    : parse-span($context);\n  $span       : susy-get(span, $context);\n  $location   : get-location($context);\n  $columns    : susy-get(columns, $context);\n\n  @return susy-slice($span, $location, $columns);\n}\n\n// Nested [mixin]\n// --------------\n// Use a subset grid for a nested context\n// - $context   : <span>\n// - @content   : <content>\n@mixin nested(\n  $context\n) {\n  $inspect  : $context;\n  $context  : parse-span($context);\n  $old      : susy-get(columns);\n  $susy     : map-merge($susy, (columns: nested($context))) !global;\n\n  @include susy-inspect(nested, $inspect);\n  @content;\n\n  $susy     : map-merge($susy, (columns: $old)) !global;\n}\n",
		"// Background Grid Syntax\n// ======================\n\n$susy-overlay-grid-head-exists: false;\n\n\n// Show Grid/s\n// -----------\n// Show grid on any element using either background or overlay.\n// - [$grid]  : <settings>\n@mixin show-grid(\n  $grid: $susy\n) {\n  $inspect: $grid;\n  $_output: debug-get(output, $grid);\n\n  @include susy-inspect(show-grid, $inspect);\n  @if $_output == overlay and susy-get(debug image, $grid) != hide {\n    @include overlay-grid($grid);\n  } @else {\n    @include background-grid($grid);\n  }\n}\n\n@mixin show-grids(\n  $grid: $susy\n) {\n  @include show-grid($grid);\n}\n\n// Background Grid\n// ---------------\n// Show a grid background on any element.\n// - [$grid]  : <settings>\n@mixin background-grid(\n  $grid: $susy\n) {\n  $inspect  : $grid;\n  $_output  : get-background($grid);\n\n  @if length($_output) > 0 {\n    $_flow: susy-get(flow, $grid);\n\n    $_image: ();\n    @each $name, $layer in map-get($_output, image) {\n      $_direction: if($name == baseline, to bottom, to to($_flow));\n      $_image: append($_image, linear-gradient($_direction, $layer), comma);\n    }\n    $_output: map-merge($_output, (image: $_image));\n\n    @include background-grid-output($_output...);\n    @include susy-inspect(background-grid, $inspect);\n  }\n}\n\n\n// Overlay Grid\n// ------------\n// Generate an icon to trigger grid-overlays on any given elements.\n// $grids...  : <selector> [<settings>] [, <selector>]*\n@mixin overlay-grid (\n  $grid: $susy\n) {\n  @if not($susy-overlay-grid-head-exists) {\n    @at-root head { @include overlay-head($grid); }\n    @at-root head:before { @include overlay-trigger; }\n    @at-root head:hover { @include overlay-trigger-hover; }\n    $susy-overlay-grid-head-exists: true !global;\n  }\n\n  head:hover ~ &,\n  head:hover ~ body & {\n    position: relative;\n    &:before {\n      @include grid-overlay-base;\n      @include background-grid($grid);\n    }\n  }\n}\n\n\n// [Private] Overlay Trigger\n// -------------------------\n@mixin overlay-trigger {\n  content: \"|||\";\n  display: block;\n  padding: 5px 10px;\n  font: {\n    family: sans-serif;\n    size: 16px;\n    weight: bold;\n  }\n}\n\n\n// [Private] Overlay Trigger Hover\n// -------------------------------\n@mixin overlay-trigger-hover {\n  background: rgba(white, .5);\n  color: red;\n}\n\n\n// [Private] Overlay Head\n// ----------------------\n// <head> styles to create grid overlay toggle\n@mixin overlay-head (\n  $grid: $susy\n) {\n  $_toggle: debug-get(toggle, $grid);\n  $_horz: null;\n  $_vert: null;\n\n  @each $side in $_toggle {\n    $_horz: if($side == left or $side == right, $side, $_horz);\n    $_vert: if($side == top or $side == bottom, $side, $_vert);\n  }\n\n  display: block;\n  position: fixed;\n  #{$_horz}: 10px;\n  #{$_vert}: 10px;\n  z-index: 999;\n  color: #333;\n  background: rgba(white, .25);\n}\n\n\n// [Private] Grid Overlay Base\n// ---------------------------\n// Base styles for generating a grid overlay\n@mixin grid-overlay-base() {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  content: \" \";\n  z-index: 998;\n}\n\n\n// Get Symmetrical Background\n// --------------------------\n// - $grid: <map>\n@function get-background-sym(\n  $grid\n) {\n  $grid           : parse-grid($grid);\n  $_gutters       : susy-get(gutters, $grid);\n  $_column-width  : susy-get(column-width, $grid);\n  $_math          : susy-get(math, $grid);\n\n  $_color         : debug-get(color);\n  $_trans         : transparent;\n  $_light         : lighten($_color, 15%);\n\n  $_end           : 1 + $_gutters;\n  $_after         : percentage(1/$_end);\n  $_stops         : ();\n  $_size          : span(1 $grid wide);\n\n  @if is-inside($grid) {\n    $_stops: $_color, $_light;\n  } @else if is-split($grid) {\n    $_split: $_gutters/2;\n    $_before: percentage($_split/$_end);\n    $_after: percentage((1 + $_split)/$_end);\n    $_stops: $_trans $_before, $_color $_before, $_light $_after, $_trans $_after;\n  } @else {\n    $_stops: $_color, $_light $_after, $_trans $_after;\n  }\n\n  @if $_math == static {\n    $_size: valid-column-math($_math, $_column-width) * $_end;\n  }\n\n  $_output: (\n    image: (columns: $_stops),\n    size: $_size,\n  );\n\n  @return $_output;\n}\n\n\n// Get Asymmetrical Inside\n// -----------------------\n// - $grid: <settings>\n@function get-asym-inside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n      $this-stop: append($this-stop, $_light $_end, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Split\n// ----------------------\n// - $grid: <settings>\n@function get-asym-split(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    $start: parse-span(1 at $location $grid);\n    $start: get-isolation($start);\n    $this-stop: append($this-stop, transparent $start, comma);\n    $this-stop: append($this-stop, $_color $start, comma);\n\n    $_end: $start + span(1 at $location $grid);\n    $this-stop: append($this-stop, $_light $_end, comma);\n    $this-stop: append($this-stop, transparent $_end, comma);\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Outside\n// ------------------------\n// - $grid: <settings>\n@function get-asym-outside(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_columns : susy-get(columns, $grid);\n\n  $_color   : debug-get(color);\n  $_light   : lighten($_color, 15%);\n  $_trans   : transparent;\n  $_stops   : ();\n\n  @for $location from 1 through susy-count($_columns) {\n    $this-stop: ();\n\n    @if $location == 1 {\n      $this-stop: append($this-stop, $_color, comma);\n    } @else {\n      $start: parse-span(1 at $location $grid);\n      $start: get-isolation($start);\n      $this-stop: append($this-stop, $_color $start, comma);\n    }\n\n    @if $location == susy-count($_columns) {\n      $this-stop: append($this-stop, $_light, comma);\n    } @else {\n      $gutter: get-span-width(first $location $grid);\n\n      $_end: parse-span(1 at ($location + 1) $grid);\n      $_end: get-isolation($_end);\n\n      $gutter: $_light $gutter, $_trans $gutter, $_trans $_end;\n      $this-stop: join($this-stop, $gutter, comma);\n    }\n\n    $_stops: join($_stops, $this-stop, comma);\n  }\n\n  @return $_stops;\n}\n\n\n// Get Asymmetrical Background\n// ---------------------------\n// - $grid: <settings>\n@function get-background-asym(\n  $grid\n) {\n  $_stops: ();\n\n  @if is-inside($grid) {\n    $_stops: get-asym-inside($grid);\n  } @else if is-split($grid) {\n    $_stops: get-asym-split($grid);\n  } @else {\n    $_stops: get-asym-outside($grid);\n  }\n\n  @return (image: (columns: $_stops));\n}\n\n\n// Get Background\n// --------------\n// - $grid: <settings>\n@function get-background(\n  $grid\n) {\n  $grid     : parse-grid($grid);\n  $_show    : susy-get(debug image, $grid);\n  $_return  : ();\n\n  @if $_show and $_show != 'hide' {\n    $_columns: susy-get(columns, $grid);\n\n    @if $_show != 'show-baseline' {\n      $_sym: is-symmetrical($_columns);\n      $_return: if($_sym, get-background-sym($grid), get-background-asym($grid));\n      $_return: map-merge($_return, (clip: content-box));\n    }\n\n    @if $_show != 'show-columns'\n      and global-variable-exists(base-line-height)\n      and type-of($base-line-height) == 'number'\n      and not unitless($base-line-height) {\n      $_color: variable-exists('grid-background-baseline-color');\n      $_color: if($_color, $grid-background-baseline-color, #000);\n\n      $_image: map-get($_return, image);\n      $_size: map-get($_return, size);\n      $_baseline: (baseline: ($_color 1px, transparent 1px));\n      $_baseline-size: 100% $base-line-height;\n\n      $_return: map-merge($_return, (\n        image: if($_image, map-merge($_image, $_baseline), $_baseline),\n        size: if($_size, ($_size, $_baseline-size), $_baseline-size),\n      ));\n\n      @if $_show == 'show' {\n        $_clip: map-get($_return, clip);\n        $_return: map-merge($_return, (clip: join($_clip, border-box, comma)));\n      }\n    } @else if $_show == 'show-baseline' {\n      @warn 'Please provide a $base-line-height with the desired height and units';\n    }\n  }\n\n  @if map-get($_return, image) {\n    $_return: map-merge($_return, (flow: susy-get(flow, $grid)));\n  }\n\n  @return $_return;\n}\n\n\n// Get Debug\n// ---------\n// Return the value of a debug setting\n// - $key: <setting>\n@function debug-get(\n  $key,\n  $grid: $susy\n) {\n  $key: join(debug, $key, space);\n  @return susy-get($key, $grid);\n}\n",
		"// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n",
		"// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n",
		"// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n",
		"// Isolation Syntax\n// ================\n\n\n// Isolate [Mixin]\n// ---------------\n// Set isolation as an override.\n// - $location: <span>\n@mixin isolate(\n  $isolate: 1\n) {\n  $inspect: $isolate;\n\n  $output: (\n    push: isolate($isolate),\n    flow: susy-get(flow, $isolate),\n  );\n\n  @include susy-inspect(isolate, $inspect);\n  @include isolate-output($output...);\n}\n\n\n// Isolate [function]\n// ------------------\n// Return an isolation offset width.\n// - $location: <span>\n@function isolate(\n  $isolate: 1\n) {\n  $isolate: parse-span($isolate);\n  $isolation: susy-get(span, $isolate);\n\n  @if $isolation and not(get-location($isolate)) {\n    $new: (\n      span: null,\n      location: $isolation,\n    );\n    $isolate: map-merge($isolate, $new);\n  }\n\n  @return get-isolation($isolate);\n}\n\n\n// Get Isolation\n// -------------\n// Return the isolation offset width\n// - $input: <map>\n@function get-isolation(\n  $input\n) {\n  $location   : get-location($input);\n  $columns    : susy-get(columns, $input);\n  $width      : null;\n\n  @if type-of($location) == number and not(unitless($location)) {\n    $width: $location;\n  } @else if $location {\n    $push: $location - 1;\n    @if $push > 0 {\n      $push: map-merge($input, (\n        span: $push,\n        location: 1,\n        spread: wide,\n      ));\n      $width: get-span-width($push);\n    }\n  }\n\n  @if susy-get(gutter-position, $input) == split\n      and susy-get(gutters, $input) > 0 {\n    $width: if($width == null, gutters($input), $width + gutters($input));\n  }\n\n  @return $width or 0;\n}\n",
		"// Gallery Syntax\n// ==============\n\n// Gallery\n// -------\n// Create an isolated gallery\n// - $span        : <span>\n// - [$selector]  : child | of-type\n@mixin gallery(\n  $span,\n  $selector: child\n) {\n  $inspect    : $span;\n  $span       : parse-span($span);\n  $span       : map-merge($span, (location: 1));\n\n  $n            : susy-get(span, $span);\n  $columns      : susy-get(columns, $span);\n  $context      : susy-count($columns);\n  $flow         : susy-get(flow, $span);\n\n  $inside       : is-inside($span);\n  $from         : from($flow);\n  $line         : floor($context / $n);\n  $symmetrical  : is-symmetrical($columns);\n\n  $output: (\n    width             : null,\n    float             : from,\n    margin-before     : null,\n    margin-after      : null,\n    padding-before    : null,\n    padding-after     : null,\n    flow              : $flow,\n  );\n\n  @if $inside {\n    $gutters: get-gutters($span);\n    $output: map-merge($output, (\n      padding-before: map-get($gutters, before),\n      padding-after: map-get($gutters, after),\n    ));\n  }\n\n  @if $symmetrical {\n    $output: map-merge($output, (width: get-span-width($span)));\n  }\n\n  $box          : susy-get(box-sizing, $span);\n  $global-box   : if(susy-get(global-box-sizing) == 'border-box', true, false);\n\n  @include susy-inspect(gallery, $inspect);\n\n  // Collective Output\n  @if $box == border-box or ($inside and not($box) and not($global-box)) {\n    @include output((box-sizing: border-box));\n  } @else if $box == content-box {\n    @include output((box-sizing: content-box));\n  }\n\n  @include float-span-output($output...);\n\n  // Individual Loop\n  @for $item from 1 through $line {\n    $nth: '#{$line}n + #{$item}';\n    &:nth-#{$selector}(#{$nth}) {\n      // Individual Prep\n      $output: (\n        width             : if($symmetrical, null, get-span-width($span)),\n        float             : null,\n        margin-before     : get-isolation($span),\n        margin-after      : -100%,\n        padding-before    : null,\n        padding-after     : null,\n        flow              : $flow,\n      );\n\n      // Individual Output\n      @include float-span-output($output...);\n\n      @if get-edge($span) == first {\n        @include break;\n        @include first($span);\n      } @else {\n        @include nobreak;\n      }\n\n      // Individual Location Increment\n      $location: get-location($span) + $n;\n      $location: if($location > $context, 1, $location);\n      $span: map-merge($span, (location: $location));\n    }\n  }\n}\n",
		"// Row Start & End\n// ===============\n\n// Break\n// -----\n// Apply to any element that should force a line break.\n@mixin break {\n  @include output((clear: both));\n}\n\n\n// NoBreak\n// -------\n// Cancel the break() effect, e.g. when using media queries.\n@mixin nobreak {\n  @include output((clear: none));\n}\n\n\n// Full\n// ----\n// - [$context]: <layout shorthand>\n@mixin full(\n  $context: $susy\n) {\n  $inspect : $context;\n  @include susy-inspect(full, $inspect);\n  @include span(full of parse-grid($context) break);\n}\n\n\n// First\n// -----\n// - [$context]: <settings>\n@mixin first(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n  $flow     : susy-get(flow, $context);\n\n  @include susy-inspect(first, $inspect);\n  @if not(is-split($context)) {\n    @include float-first($flow);\n  }\n}\n\n@mixin alpha(\n  $context: $susy\n) {\n  @include first($context);\n}\n\n\n// Last\n// ----\n// - [$context]: <settings>\n@mixin last(\n  $context: $susy\n) {\n  $inspect  : $context;\n  $context  : parse-grid($context);\n\n  @include susy-inspect(last, $inspect);\n\n  $output: (\n    flow: susy-get(flow, $context),\n    last-flow: susy-get(last-flow, $context),\n    margin: if(is-split($context), null, 0),\n  );\n\n  @include float-last($output...);\n}\n\n@mixin omega(\n  $context: $susy\n) {\n  @include last($context);\n}\n\n\n// Get Edge\n// --------\n// Calculate edge value based on location, if possible\n@function get-edge(\n  $span\n) {\n  $span       : parse-span($span);\n  $edge       : susy-get(edge, $span);\n\n  @if not($edge) {\n    $count: susy-count(susy-get(columns, $span));\n    $location: susy-get(location, $span);\n    $n: susy-get(span, $span);\n\n    $number: if(type-of($location) == number, true, false);\n    $index: if($number and unitless($location), true, false);\n\n    @if $n == $count {\n      $edge: full;\n    } @else if $location and $n and $index {\n      @if $location == 1 {\n        $edge: if($n == $count, full, first);\n      } @else if $location + $n - 1 == $count {\n        $edge: last;\n      }\n    }\n  }\n\n  @if $edge == alpha or $edge == omega {\n    $edge: if($edge == alpha, first, last);\n  }\n\n  @return $edge;\n}\n\n\n// Get Location\n// ------------\n// Calculate location value based on edge, if possible\n@function get-location(\n  $span\n) {\n  $span       : parse-span($span);\n  $location   : susy-get(location, $span);\n  $edge       : get-edge($span);\n  $n          : susy-get(span, $span);\n\n  @if $edge and not($location) and type-of($n) == number and unitless($n) {\n    @if $edge == first {\n      $location: 1;\n    } @else if $edge == last {\n      $location: susy-count(susy-get(columns, $span)) - $n + 1;\n    }\n  }\n\n  @return $location\n}\n",
		"// Margin Syntax\n// =============\n\n// Pre\n// ---\n// Add spanning-margins before an element.\n// - $span  : <span>\n@mixin pre(\n  $span\n) {\n  $inspect: $span;\n  $span   : map-merge((spread: wide), parse-span($span));\n  $flow   : susy-get(flow, $span);\n  $split  : if(susy-get(gutter-position, $span) == split, true, false);\n  $gutter : gutter($span);\n  $span   : span($span);\n  $width  : if($split and $gutter, $span + $gutter, $span);\n\n  @include susy-inspect(pre, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Post\n// ----\n// Add spanning-margins after an element.\n// - $span  : <span>\n@mixin post(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, span($span) + gutter($span), span($span));\n\n  @include susy-inspect(post, $inspect);\n  @include margin-output(null, $width, $flow);\n}\n\n// Push\n// ----\n// Simple synonymn for pre.\n// - $span  : <span>\n@mixin push(\n  $span\n) {\n  @include pre($span);\n}\n\n// Pull\n// ----\n// Add negative spanning-margins before an element.\n// - $span  : <span>\n@mixin pull(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $split    : if(susy-get(gutter-position, $span) == split, true, false);\n  $width    : if($split, 0 - span($span) + gutter($span), 0 - span($span));\n\n  @include susy-inspect(pull, $inspect);\n  @include margin-output($width, null, $flow);\n}\n\n// Squish\n// ------\n// Add spanning-margins before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin squish(\n  $pre,\n  $post: false\n) {\n  $inspect      : ($pre, $post);\n  $pre          : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(squish, $inspect);\n  @include pre($pre);\n  @include post($post);\n}\n",
		"// Padding Syntax\n// ==============\n\n// Prefix\n// ------\n// Add spanning-padding before an element.\n// - $span  : <span>\n@mixin prefix(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $width    : span($span);\n\n  @if is-inside($span) {\n    $gutter: gutter($span);\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\n  }\n\n  @include susy-inspect(prefix, $inspect);\n  @include padding-output($width, null, $flow);\n}\n\n// Suffix\n// ------\n// Add spanning-padding after an element.\n// - $span  : <span>\n@mixin suffix(\n  $span\n) {\n  $inspect  : $span;\n  $span     : map-merge((spread: wide), parse-span($span));\n  $flow     : susy-get(flow, $span);\n  $width    : span($span);\n\n  @if is-inside($span) {\n    $gutter: gutter($span);\n    $width: if($gutter and comparable($width, $gutter), $width + $gutter, $width);\n  }\n\n  @include susy-inspect(suffix, $inspect);\n  @include padding-output(null, $width, $flow);\n}\n\n// Pad\n// ---\n// Add spanning-padding before and after an element.\n// - $pre     : <span>\n// - [$post]  : <span>\n@mixin pad(\n  $pre,\n  $post: false\n) {\n  $inspect  : ($pre, $post);\n  $pre      : map-merge((spread: wide), parse-span($pre));\n\n  @if $post {\n    $post: map-merge((spread: wide), parse-span($post));\n  } @else {\n    $span: susy-get(span, $pre);\n    @if length($span) > 1 {\n      $pre: map-merge($pre, (span: nth($span, 1)));\n      $post: map-merge($pre, (span: nth($span, 2)));\n    } @else {\n      $post: $pre;\n    }\n  }\n\n  @include susy-inspect(pad, $inspect);\n  @include prefix($pre);\n  @include suffix($post);\n\n}\n",
		"// Bleed Syntax\n// ============\n\n// Bleed\n// -----\n// Add negative margins, and equal positive padding to create bleed.\n// - $bleed  : <span>\n@mixin bleed(\n  $bleed: 0 gutter()\n) {\n  $inspect  : $bleed;\n  $output   : get-bleed($bleed);\n\n  @if susy-get(global-box-sizing) != content-box {\n    $output: map-merge((box-sizing: content-box), $output);\n  }\n\n  @include susy-inspect(bleed, $inspect);\n  @include output($output);\n}\n\n\n// Bleed-x\n// -------\n// Shortcut for horizontal bleed.\n// - $bleed  : <span>\n@mixin bleed-x(\n  $bleed: gutter()\n) {\n  $bleed  : parse-span($bleed);\n  $trbl   : susy-get(span, $bleed);\n\n  @if length($trbl) == 1 {\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 1)));\n  } @else if length($trbl) == 2 {\n    $bleed: map-merge($bleed, (span: 0 nth($trbl, 2) 0 nth($trbl, 1)));\n  } @else {\n    @warn 'bleed-x only takes 2 lengths, but #{length($trbl)} were passed.';\n  }\n\n  @include bleed($bleed);\n}\n\n\n// Bleed-y\n// -------\n// Shortcut for vertical bleed.\n// - $bleed  : <span>\n@mixin bleed-y(\n  $bleed: if(function-exists(rhythm), rhythm(1), 1em)\n) {\n  $bleed  : parse-span($bleed);\n  $trbl   : susy-get(span, $bleed);\n\n  @if length($trbl) == 1 {\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0));\n  } @else if length($trbl) == 2 {\n    $bleed: map-merge($bleed, (span: nth($trbl, 1) 0 nth($trbl, 2) 0));\n  } @else {\n    @warn 'bleed-y only takes 2 lengths, but #{length($trbl)} were passed.';\n  }\n\n  @include bleed($bleed);\n}\n\n\n// Get Bleed\n// ---------\n// Return bleed output values\n// - $bleed: <span>\n@function get-bleed(\n  $bleed\n) {\n  $bleed    : map-merge((spread: wide), parse-span($bleed));\n  $trbl     : susy-get(span, $bleed);\n  $short    : null;\n  $output   : ();\n\n  @for $i from 1 through length($trbl) {\n    $this: nth($trbl, $i);\n    $new: ();\n    $margin: null;\n    $padding: null;\n    $padding-x: null;\n\n    @if $this > 0 {\n      $this: map-merge($bleed, (span: $this));\n      $margin: span($this);\n      $padding: $margin;\n      $padding-x: $padding;\n    }\n\n    @if $margin and $margin > 0 {\n      $margin: - $margin;\n\n      @if is-inside($this) {\n        $gutter: gutter($this);\n        $join: if($gutter and comparable($padding, $gutter), true, false);\n        $padding-x: if($join and $padding > 0, $padding + $gutter, $padding);\n      }\n    }\n\n    @if $i == 1 {\n      $new: (\n        margin-top: $margin,\n        padding-top: $padding,\n        margin-right: $margin,\n        padding-right: $padding-x,\n        margin-bottom: $margin,\n        padding-bottom: $padding,\n        margin-left: $margin,\n        padding-left: $padding-x,\n      );\n    } @else if $i == 2 {\n      $new: (\n        margin-right: $margin,\n        padding-right: $padding-x,\n        margin-left: $margin,\n        padding-left: $padding-x,\n      );\n    } @else if $i == 3 {\n      $new: (\n        margin-bottom: $margin,\n        padding-bottom: $padding,\n      );\n    } @else if $i == 4 {\n      $new: (\n        margin-left: $margin,\n        padding-left: $padding-x,\n      );\n    }\n\n    $output: map-merge($output, $new);\n  }\n\n  @each $prop, $value in $output {\n    $output: if($value == 0, map-merge($output, ($prop: null)), $output);\n  }\n\n  @return bleed-shorthand($output);\n}\n\n// Bleed Shorthand\n// ---------------\n// Convert bleed output into shorthand when possible.\n// - $bleed: <output map>\n@function bleed-shorthand(\n  $bleed\n) {\n  $margin: ();\n  $padding: ();\n  $return: ();\n\n  @each $key, $value in $bleed {\n    @if str-index($key, margin) {\n      $margin: map-merge($margin, ($key: $value));\n    } @else if str-index($key, padding) > 0 {\n      $padding: map-merge($padding, ($key: $value));\n    }\n  }\n\n  $props: (\n    margin: $margin,\n    padding: $padding,\n  );\n\n  @each $name, $map in $props {\n    $four: if(length(map-keys($map)) == 4, true, false);\n    $null: if(index(map-values($map), null), true, false);\n\n    @if $four and not($null) {\n      $top: map-get($map, '#{$name}-top');\n      $right: map-get($map, '#{$name}-right');\n      $bottom: map-get($map, '#{$name}-bottom');\n      $left: map-get($map, '#{$name}-left');\n\n      $tb: if($top == $bottom, $top, null);\n      $rl: if($right == $left, $right, null);\n      $all: if($tb == $rl, $tb, null);\n\n      $new: if($all, $all, null);\n\n      @if not($new) {\n        @if $tb and $rl {\n          $new: $tb $rl;\n        } @else if $rl {\n          $new: $top $rl $bottom;\n        } @else {\n          $new: $top $right $bottom $left;\n        }\n      }\n\n      $return: map-merge($return, ($name: $new));\n    } @else {\n      $return: map-merge($return, $map);\n    }\n  }\n\n  @return $return;\n}\n",
		"// Breakpoint Integration\n// ======================\n\n$susy-media: () !default;\n$susy-media-fallback: false !default;\n\n$_susy-media-context: ();\n\n\n// Susy Breakpoint\n// ---------------\n// Change grids at different media query breakpoints.\n// - $query     : <min-width> [<max-width>] | <property> <value> | <map>\n// - $layout    : <settings>\n// - $no-query  : <boolean> | <selector>\n@mixin susy-breakpoint(\n  $query,\n  $layout: false,\n  $no-query: $susy-media-fallback\n) {\n  @include susy-media-router($query, $no-query) {\n    @if $layout {\n      @include with-layout($layout) {\n        @content;\n      }\n    } @else {\n      @content;\n    }\n  }\n}\n\n\n// Susy Media\n// ----------\n// - $query: <min-width> [<max-width>] | <property> <value>\n// - $no-query: <boolean> | <selector>\n@mixin susy-media(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  $old-context: $_susy-media-context;\n  $name: if(map-has-key($susy-media, $query), $query, null);\n  $query: susy-get-media($query);\n  $query: susy-parse-media($query);\n\n  @include susy-media-context($query, $name);\n\n  @if $no-query and type-of($no-query) != string {\n    @content;\n  } @else {\n    @media #{susy-render-media($query)} {\n      @content;\n    }\n\n    @if type-of($no-query) == string {\n      #{$no-query} & {\n        @content;\n      }\n    }\n  }\n\n  @include susy-media-context($old-context, $clean: true);\n}\n\n\n// Media Router\n// ------------\n// Rout media arguments to the correct mixin.\n@mixin susy-media-router(\n  $query,\n  $no-query: $susy-media-fallback\n) {\n  @if susy-support(breakpoint, (mixin: breakpoint), $warn: false) {\n    @include breakpoint($query, $no-query) {\n      @content;\n    }\n  } @else {\n    @include susy-media($query, $no-query) {\n      @content;\n    }\n  }\n}\n\n\n// Update Context\n// -------------\n// Set the new media context\n@mixin susy-media-context(\n  $query,\n  $name: null,\n  $clean: false\n) {\n  $query: map-merge((name: $name), $query);\n\n  @if $clean {\n    $_susy-media-context: $query !global;\n  } @else {\n    $_susy-media-context: map-merge($_susy-media-context, $query) !global;\n  }\n}\n\n\n// Media Context\n// -------------\n// Return the full media context, or a single media property (e.g. min-width)\n@function susy-media-context(\n  $property: false\n) {\n  @if $property {\n    @return map-get($_susy-media-context, $property);\n  } @else {\n    @return $_susy-media-context;\n  }\n}\n\n\n// Get Media\n// ---------\n// Return a named media-query from $susy-media.\n// - $name: <key>\n@function susy-get-media(\n  $name\n) {\n  @if map-has-key($susy-media, $name) {\n    $map-value: map-get($susy-media, $name);\n    @if ($name == $map-value) {\n      $name: $map-value;\n    } @else {\n      $name: susy-get-media($map-value);\n    }\n  }\n\n  @return $name;\n}\n\n\n// Render Media\n// ------------\n// Build a media-query string from various media settings\n@function susy-render-media(\n  $query\n) {\n  $output: null;\n  @each $property, $value in $query {\n    $string: null;\n\n    @if $property == media {\n      $string: $value;\n    } @else {\n      $string: '(#{$property}: #{$value})';\n    }\n\n    $output: if($output, '#{$output} and #{$string}', $string);\n  }\n\n  @return $output;\n}\n\n\n// Parse Media\n// -----------\n// Return parsed media-query settings based on shorthand\n@function susy-parse-media(\n  $query\n) {\n  $mq: null;\n  @if type-of($query) == map {\n    $mq: $query;\n  } @else if type-of($query) == number {\n    $mq: (min-width: $query);\n  } @else if type-of($query) == list and length($query) == 2 {\n    @if type-of(nth($query, 1)) == number {\n      $mq: (\n        min-width: min($query...),\n        max-width: max($query...),\n      );\n    } @else {\n      $mq: (nth($query, 1): nth($query, 2));\n    }\n  } @else {\n    $mq: (media: '#{$query}');\n  }\n\n  @return $mq;\n}\n",
		"//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n",
		"//////////////////////////////\n// Has Setting\n//////////////////////////////\n@function breakpoint-has($setting) {\n  @if map-has-key($breakpoint, $setting) {\n    @return true;\n  }\n  @else {\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Get Settings\n//////////////////////////////\n@function breakpoint-get($setting) {\n  @if breakpoint-has($setting) {\n    @return map-get($breakpoint, $setting);\n  }\n  @else {\n    @return map-get($Breakpoint-Settings, $setting);\n  }\n}\n\n//////////////////////////////\n// Set Settings\n//////////////////////////////\n@function breakpoint-set($setting, $value) {\n  @if (str-index($setting, '-') or str-index($setting, '_')) and str-index($setting, ' ') == null {\n    @warn \"Words in Breakpoint settings should be separated by spaces, not dashes or underscores. Please replace dashes and underscores between words with spaces. Settings will not work as expected until changed.\";\n  }\n  $breakpoint: map-merge($breakpoint, ($setting: $value)) !global;\n  @return true;\n}\n\n@mixin breakpoint-change($setting, $value) {\n  $breakpoint-change: breakpoint-set($setting, $value);\n}\n\n@mixin breakpoint-set($setting, $value) {\n  @include breakpoint-change($setting, $value);\n}\n\n@mixin bkpt-change($setting, $value) {\n  @include breakpoint-change($setting, $value);\n}\n@mixin bkpt-set($setting, $value) {\n  @include breakpoint-change($setting, $value);\n}\n\n//////////////////////////////\n// Remove Setting\n//////////////////////////////\n@function breakpoint-reset($settings...) {\n  @if length($settings) == 1 {\n    $settings: nth($settings, 1);\n  }\n\n  @each $setting in $settings {\n    $breakpoint: map-remove($breakpoint, $setting) !global;\n  }\n  @return true;\n}\n\n@mixin breakpoint-reset($settings...) {\n  $breakpoint-reset: breakpoint-reset($settings);\n}\n\n@mixin bkpt-reset($settings...) {\n  $breakpoint-reset: breakpoint-reset($settings);\n}",
		"//////////////////////////////\n// Private Breakpoint Variables\n//////////////////////////////\n$private-breakpoint-context-holder: ();\n$private-breakpoint-query-count: 0 !default;\n\n//////////////////////////////\n// Breakpoint Has Context\n// Returns whether or not you are inside a Breakpoint query\n//////////////////////////////\n@function breakpoint-has-context() {\n  @if length($private-breakpoint-query-count) {\n    @return true;\n  }\n  @else {\n    @return false;\n  }\n}\n\n//////////////////////////////\n// Breakpoint Get Context\n// $feature: Input feature to get it's current MQ context. Returns false if no context\n//////////////////////////////\n@function breakpoint-get-context($feature) {\n  @if map-has-key($private-breakpoint-context-holder, $feature) {\n    $get: map-get($private-breakpoint-context-holder, $feature);\n    // Special handling of no-query from get side so /false/ prepends aren't returned\n    @if $feature == 'no-query' {\n      @if type-of($get) == 'list' and length($get) > 1 and nth($get, 1) == false {\n        $get: nth($get, length($get));\n      }\n    }\n    @return $get;\n  }\n  @else {\n    @if breakpoint-has-context() and $feature == 'media' {\n      @return breakpoint-get('default media');\n    }\n    @else {\n      @return false;\n    }\n  }\n}\n\n//////////////////////////////\n// Private function to set context\n//////////////////////////////\n@function private-breakpoint-set-context($feature, $value) {\n  @if $value == 'monochrome' {\n    $feature: 'monochrome';\n  }\n\n  $current: map-get($private-breakpoint-context-holder, $feature);\n  @if $current and length($current) == $private-breakpoint-query-count {\n    @warn \"You have already queried against `#{$feature}`. Unexpected things may happen if you query against the same feature more than once in the same `and` query. Breakpoint is overwriting the current context with `#{$value}`\";\n  }\n\n  @if not map-has-key($private-breakpoint-context-holder, $feature) {\n    $v-holder: ();\n    @for $i from 1 to $private-breakpoint-query-count {\n      @if $feature == 'media' {\n        $v-holder: append($v-holder, breakpoint-get('default media'));\n      }\n      @else {\n        $v-holder: append($v-holder, false);\n      }\n    }\n    $v-holder: append($v-holder, $value);\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($feature: $v-holder)) !global;\n  }\n  @else {\n    $v-holder: map-get($private-breakpoint-context-holder, $feature);\n    $length: length($v-holder);\n    @for $i from $length to $private-breakpoint-query-count - 1 {\n      @if $feature == 'media' {\n        $v-holder: append($v-holder, breakpoint-get('default media'));\n      }\n      @else {\n        $v-holder: append($v-holder, false);\n      }\n    }\n    $v-holder: append($v-holder, $value);\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($feature: $v-holder)) !global;\n  }\n\n  @return true;\n}\n\n//////////////////////////////\n// Private function to reset context\n//////////////////////////////\n@mixin private-breakpoint-reset-contexts {\n  $private-breakpoint-context-holder: () !global;\n  $private-breakpoint-query-count: 0 !global;\n}",
		"//////////////////////////////\n// Converts the input value to Base EMs\n//////////////////////////////\n@function breakpoint-to-base-em($value) {\n  $value-unit: unit($value);\n\n  // Will convert relative EMs into root EMs.\n  @if breakpoint-get('base font size') and type-of(breakpoint-get('base font size')) == 'number' and $value-unit == 'em' {\n    $base-unit: unit(breakpoint-get('base font size'));\n\n    @if $base-unit == 'px' or $base-unit == '%' or $base-unit == 'em' or $base-unit == 'pt' {\n      @return base-conversion($value) / base-conversion(breakpoint-get('base font size')) * 1em;\n    }\n    @else {\n      @warn '#{breakpoint-get(\\'base font size\\')} is not set in valid units for font size!';\n      @return false;\n    }\n  }\n  @else {\n    @return base-conversion($value);\n  }\n}\n\n@function base-conversion($value) {\n  $unit: unit($value);\n\n  @if $unit == 'px' {\n    @return $value / 16px * 1em;\n  }\n  @else if $unit == '%' {\n    @return $value / 100% * 1em;\n  }\n  @else if $unit == 'em' {\n    @return $value;\n  }\n  @else if $unit == 'pt' {\n    @return $value / 12pt * 1em;\n  }\n  @else {\n    @return $value;\n//    @warn 'Everything is terrible! What have you done?!';\n  }\n}\n\n//////////////////////////////\n// Returns whether the feature can have a min/max pair\n//////////////////////////////\n$breakpoint-min-max-features: 'color',\n                              'color-index',\n                              'aspect-ratio',\n                              'device-aspect-ratio',\n                              'device-height',\n                              'device-width',\n                              'height',\n                              'monochrome',\n                              'resolution',\n                              'width';\n\n@function breakpoint-min-max($feature) {\n  @each $item in $breakpoint-min-max-features {\n    @if $feature == $item {\n      @return true;\n    }\n  }\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature can have a string value\n//////////////////////////////\n$breakpoint-string-features:  'orientation',\n                              'scan',\n                              'color',\n                              'aspect-ratio',\n                              'device-aspect-ratio',\n                              'pointer',\n                              'luminosity';\n\n@function breakpoint-string-value($feature) {\n  @each $item in $breakpoint-string-features {\n    @if breakpoint-min-max($item) {\n      @if $feature == 'min-#{$item}' or $feature == 'max-#{$item}' {\n        @return true;\n      }\n    }\n    @else if $feature == $item {\n      @return true;\n    }\n  }\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature is a media type\n//////////////////////////////\n$breakpoint-media-types:  'all',\n                          'braille',\n                          'embossed',\n                          'handheld',\n                          'print',\n                          'projection',\n                          'screen',\n                          'speech',\n                          'tty',\n                          'tv';\n\n@function breakpoint-is-media($feature) {\n  @each $media in $breakpoint-media-types {\n    @if ($feature == $media) or ($feature == 'not #{$media}') or ($feature == 'only #{$media}') {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature can stand alone\n//////////////////////////////\n$breakpoint-single-string-features: 'color',\n                                    'color-index',\n                                    'grid',\n                                    'monochrome';\n\n@function breakpoint-single-string($feature) {\n  @each $item in $breakpoint-single-string-features {\n    @if $feature == $item {\n      @return true;\n    }\n  }\n  @return false;\n}\n\n//////////////////////////////\n// Returns whether the feature\n//////////////////////////////\n@function breakpoint-is-resolution($feature) {\n  $resolutions: 'device-pixel-ratio', 'dpr';\n\n  @if breakpoint-get('transform resolutions') {\n    $resolutions: append($resolutions, 'resolution');\n  }\n\n  @each $reso in $resolutions {\n    @if index($feature, $reso) or index($feature, 'min-#{$reso}') or index($feature, 'max-#{$reso}') {\n      @return true;\n    }\n  }\n\n  @return false;\n}\n",
		"//////////////////////////////\n// Import Parser Pieces\n//////////////////////////////\n@import \"parsers/query\";\n@import \"parsers/single\";\n@import \"parsers/double\";\n@import \"parsers/triple\";\n@import \"parsers/resolution\";\n\n$Memo-Exists: function-exists(memo-get) and function-exists(memo-set);\n\n//////////////////////////////\n// Breakpoint Function\n//////////////////////////////\n@function breakpoint($query, $contexts...) {\n  $run: true;\n  $return: ();\n\n  // Grab the Memo Output if Memoization can be a thing\n  @if $Memo-Exists {\n    $return: memo-get(breakpoint, breakpoint $query $contexts);\n\n    @if $return != null {\n      $run: false;\n    }\n  }\n\n  @if not $Memo-Exists or $run {\n    // Internal Variables\n    $query-string: '';\n    $query-fallback: false;\n    $return: ();\n\n    // Reserve Global Private Breakpoint Context\n    $holder-context: $private-breakpoint-context-holder;\n    $holder-query-count: $private-breakpoint-query-count;\n\n    // Reset Global Private Breakpoint Context\n    $private-breakpoint-context-holder: () !global;\n    $private-breakpoint-query-count: 0 !global;\n\n\n    // Test to see if it's a comma-separated list\n    $or-list: if(list-separator($query) == 'comma', true, false);\n\n\n    @if ($or-list == false and breakpoint-get('legacy syntax') == false) {\n      $query-string: breakpoint-parse($query);\n    }\n    @else {\n      $length: length($query);\n\n      $last: nth($query, $length);\n      $query-fallback: breakpoint-no-query($last);\n\n      @if ($query-fallback != false) {\n        $length: $length - 1;\n      }\n\n      @if (breakpoint-get('legacy syntax') == true) {\n        $mq: ();\n\n        @for $i from 1 through $length {\n          $mq: append($mq, nth($query, $i), comma);\n        }\n\n        $query-string: breakpoint-parse($mq);\n      }\n      @else {\n        $query-string: '';\n        @for $i from 1 through $length {\n          $query-string: $query-string + if($i == 1, '', ', ') + breakpoint-parse(nth($query, $i));\n        }\n      }\n    }\n\n    $return: ('query': $query-string,\n        'fallback': $query-fallback,\n        'context holder': $private-breakpoint-context-holder,\n        'query count': $private-breakpoint-query-count\n    );\n    @if length($contexts) > 0 and nth($contexts, 1) != false {\n      @if $query-fallback != false {\n        $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n      }\n      $context-map: ();\n      @each $context in $contexts {\n        $context-map: map-merge($context-map, ($context: breakpoint-get-context($context)));\n      }\n      $return: map-merge($return, (context: $context-map));\n    }\n\n    // Reset Global Private Breakpoint Context\n    $private-breakpoint-context-holder: () !global;\n    $private-breakpoint-query-count: 0 !global;\n\n    @if $Memo-Exists {\n      $holder: memo-set(breakpoint, breakpoint $query $contexts, $return);\n    }\n  }\n\n  @return $return;\n}\n\n//////////////////////////////\n// General Breakpoint Parser\n//////////////////////////////\n@function breakpoint-parse($query) {\n  // Increase number of 'and' queries\n  $private-breakpoint-query-count: $private-breakpoint-query-count + 1 !global;\n\n  // Set up Media Type\n  $query-print: '';\n\n  $force-all: ((breakpoint-get('force all media type') == true) and (breakpoint-get('default media') == 'all'));\n  $empty-media: true;\n  @if ($force-all == true) or (breakpoint-get('default media') != 'all') {\n    // Force the print of the default media type if (force all is true and default media type is all) or (default media type is not all)\n    $query-print: breakpoint-get('default media');\n    $empty-media: false;\n  }\n\n\n  $query-resolution: false;\n\n  $query-holder: breakpoint-parse-query($query);\n\n\n\n  // Loop over each parsed out query and write it to $query-print\n  $first: true;\n\n  @each $feature in $query-holder {\n    $length: length($feature);\n\n    // Parse a single feature\n    @if ($length == 1) {\n      // Feature is currently a list, grab the actual value\n      $feature: nth($feature, 1);\n\n      // Media Type must by convention be the first item, so it's safe to flat override $query-print, which right now should only be the default media type\n      @if (breakpoint-is-media($feature)) {\n        @if ($force-all == true) or ($feature != 'all') {\n          // Force the print of the default media type if (force all is true and default media type is all) or (default media type is not all)\n          $query-print: $feature;\n          $empty-media: false;\n\n          // Set Context\n          $context-setter: private-breakpoint-set-context(media, $query-print);\n        }\n      }\n      @else {\n        $parsed: breakpoint-parse-single($feature, $empty-media, $first);\n        $query-print: '#{$query-print} #{$parsed}';\n        $first: false;\n      }\n    }\n    // Parse a double feature\n    @else if ($length == 2) {\n      @if (breakpoint-is-resolution($feature) != false) {\n        $query-resolution: $feature;\n      }\n      @else {\n        $parsed: null;\n        // If it's a string/number pair,\n        // we check to see if one is a single-string value,\n        // then we parse it as a normal double\n        $alpha: nth($feature, 1);\n        $beta: nth($feature, 2);\n        @if breakpoint-single-string($alpha) or breakpoint-single-string($beta) {\n          $parsed: breakpoint-parse-single($alpha, $empty-media, $first);\n          $query-print: '#{$query-print} #{$parsed}';\n          $first: false;\n          $parsed: breakpoint-parse-single($beta, $empty-media, $first);\n          $query-print: '#{$query-print} #{$parsed}';\n        }\n        @else {\n          $parsed: breakpoint-parse-double($feature, $empty-media, $first);\n          $query-print: '#{$query-print} #{$parsed}';\n          $first: false;\n        }\n      }\n    }\n    // Parse a triple feature\n    @else if ($length == 3) {\n      $parsed: breakpoint-parse-triple($feature, $empty-media, $first);\n      $query-print: '#{$query-print} #{$parsed}';\n      $first: false;\n    }\n\n  }\n\n  @if ($query-resolution != false) {\n    $query-print: breakpoint-build-resolution($query-print, $query-resolution, $empty-media, $first);\n  }\n\n  // Loop through each feature that's been detected so far and append 'false' to the the value list to increment their counters\n  @each $f, $v in $private-breakpoint-context-holder {\n    $v-holder: $v;\n    $length: length($v-holder);\n    @if length($v-holder) < $private-breakpoint-query-count {\n      @for $i from $length to $private-breakpoint-query-count {\n        @if $f == 'media' {\n          $v-holder: append($v-holder, breakpoint-get('default media'));\n        }\n        @else {\n          $v-holder: append($v-holder, false);\n        }\n      }\n    }\n    $private-breakpoint-context-holder: map-merge($private-breakpoint-context-holder, ($f: $v-holder)) !global;\n  }\n\n  @return $query-print;\n}\n",
		"@function breakpoint-parse-query($query) {\n  // Parse features out of an individual query\n  $feature-holder: ();\n  $query-holder: ();\n  $length: length($query);\n\n  @if $length == 2 {\n    // If we've got a string/number, number/string, check to see if it's a valid string/number pair or two singles\n    @if (type-of(nth($query, 1)) == 'string' and type-of(nth($query, 2)) == 'number') or (type-of(nth($query, 1)) == 'number' and type-of(nth($query, 2)) == 'string') {\n\n      $number: '';\n      $value: '';\n\n      @if type-of(nth($query, 1)) == 'string' {\n        $number: nth($query, 2);\n        $value: nth($query, 1);\n      }\n      @else {\n        $number: nth($query, 1);\n        $value: nth($query, 2);\n      }\n\n      // If the string value can be a single value, check to see if the number passed in is a valid input for said single value. Fortunately, all current single-value options only accept unitless numbers, so this check is easy.\n      @if breakpoint-single-string($value) {\n        @if unitless($number) {\n          $feature-holder: append($value, $number, space);\n          $query-holder: append($query-holder, $feature-holder, comma);\n          @return $query-holder;\n        }\n      }\n      // If the string is a media type, split the query\n      @if breakpoint-is-media($value) {\n        $query-holder: append($query-holder, nth($query, 1));\n        $query-holder: append($query-holder, nth($query, 2));\n        @return $query-holder;\n      }\n      // If it's not a single feature, we're just going to assume it's a proper string/value pair, and roll with it.\n      @else {\n        $feature-holder: append($value, $number, space);\n        $query-holder: append($query-holder, $feature-holder, comma);\n        @return $query-holder;\n      }\n\n    }\n    // If they're both numbers, we assume it's a double and roll with that\n    @else if (type-of(nth($query, 1)) == 'number' and type-of(nth($query, 2)) == 'number') {\n      $feature-holder: append(nth($query, 1), nth($query, 2), space);\n      $query-holder: append($query-holder, $feature-holder, comma);\n      @return $query-holder;\n    }\n    // If they're both strings and neither are singles, we roll with that.\n    @else if (type-of(nth($query, 1)) == 'string' and type-of(nth($query, 2)) == 'string') {\n      @if not breakpoint-single-string(nth($query, 1)) and not breakpoint-single-string(nth($query, 2)) {\n        $feature-holder: append(nth($query, 1), nth($query, 2), space);\n        $query-holder: append($query-holder, $feature-holder, comma);\n        @return $query-holder;\n      }\n    }\n  }\n  @else if $length == 3 {\n    // If we've got three items and none is a list, we check to see\n    @if type-of(nth($query, 1)) != 'list' and type-of(nth($query, 2)) != 'list' and type-of(nth($query, 3)) != 'list' {\n      // If none of the items are single string values and none of the values are media values, we're good.\n      @if (not breakpoint-single-string(nth($query, 1)) and not breakpoint-single-string(nth($query, 2)) and not breakpoint-single-string(nth($query, 3))) and  ((not breakpoint-is-media(nth($query, 1)) and not breakpoint-is-media(nth($query, 2)) and not breakpoint-is-media(nth($query, 3)))) {\n        $feature-holder: append(nth($query, 1), nth($query, 2), space);\n        $feature-holder: append($feature-holder, nth($query, 3), space);\n        $query-holder: append($query-holder, $feature-holder, comma);\n        @return $query-holder;\n      }\n      // let's check to see if the first item is a media type\n      @else if breakpoint-is-media(nth($query, 1)) {\n        $query-holder: append($query-holder, nth($query, 1));\n        $feature-holder: append(nth($query, 2), nth($query, 3), space);\n        $query-holder: append($query-holder, $feature-holder);\n        @return $query-holder;\n      }\n    }\n  }\n\n  // If it's a single item, or if it's not a special case double or triple, we can simply return the query.\n  @return $query;\n}\n",
		"//////////////////////////////\n// Import Pieces\n//////////////////////////////\n@import \"single/default\";\n\n@function breakpoint-parse-single($feature, $empty-media, $first) {\n  $parsed: '';\n  $leader: '';\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  // If it's a single feature that can stand alone, we let it\n  @if (breakpoint-single-string($feature)) {\n    $parsed: $feature;\n    // Set Context\n    $context-setter: private-breakpoint-set-context($feature, $feature);\n  }\n  // If it's not a stand alone feature, we pass it off to the default handler.\n  @else {\n    $parsed: breakpoint-parse-default($feature);\n  }\n\n  @return $leader + '(' + $parsed + ')';\n}\n",
		"@function breakpoint-parse-default($feature) {\n  $default: breakpoint-get('default feature');\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context($default, $feature);\n\n  @if (breakpoint-get('to ems') == true) and (type-of($feature) == 'number') {\n    @return '#{$default}: #{breakpoint-to-base-em($feature)}';\n  }\n  @else {\n    @return '#{$default}: #{$feature}';\n  }\n}\n",
		"//////////////////////////////\n// Import Pieces\n//////////////////////////////\n@import \"double/default-pair\";\n@import \"double/double-string\";\n@import \"double/default\";\n\n@function breakpoint-parse-double($feature, $empty-media, $first) {\n  $parsed: '';\n  $leader: '';\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  $first: nth($feature, 1);\n  $second: nth($feature, 2);\n\n  // If we've got two numbers, we know we need to use the default pair because there are no media queries that has a media feature that is a number\n  @if type-of($first) == 'number' and type-of($second) == 'number' {\n    $parsed: breakpoint-parse-default-pair($first, $second);\n  }\n  // If they are both strings, we send it through the string parser\n  @else if type-of($first) == 'string' and type-of($second) == 'string' {\n    $parsed: breakpoint-parse-double-string($first, $second);\n  }\n  // If it's a string/number pair, we parse it as a normal double\n  @else {\n    $parsed: breakpoint-parse-double-default($first, $second);\n  }\n\n  @return $leader + $parsed;\n}\n",
		"@function breakpoint-parse-default-pair($first, $second) {\n  $default: breakpoint-get('default pair');\n  $min: '';\n  $max: '';\n\n  // Sort into min and max\n  $min: min($first, $second);\n  $max: max($first, $second);\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context(min-#{$default}, $min);\n  $context-setter: private-breakpoint-set-context(max-#{$default}, $max);\n\n  // Make them EMs if need be\n  @if (breakpoint-get('to ems') == true) {\n    $min: breakpoint-to-base-em($min);\n    $max: breakpoint-to-base-em($max);\n  }\n\n  @return '(min-#{$default}: #{$min}) and (max-#{$default}: #{$max})';\n}\n",
		"@function breakpoint-parse-double-string($first, $second) {\n  $feature: '';\n  $value: '';\n\n  // Test to see which is the feature and which is the value\n  @if (breakpoint-string-value($first) == true) {\n    $feature: $first;\n    $value: $second;\n  }\n  @else if (breakpoint-string-value($second) == true) {\n    $feature: $second;\n    $value: $first;\n  }\n  @else {\n    @warn \"Neither #{$first} nor #{$second} is a valid media query name.\";\n  }\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context($feature, $value);\n\n  @return '(#{$feature}: #{$value})';\n}",
		"@function breakpoint-parse-double-default($first, $second) {\n  $feature: '';\n  $value: '';\n\n  @if type-of($first) == 'string' {\n    $feature: $first;\n    $value: $second;\n  }\n  @else {\n    $feature: $second;\n    $value: $first;\n  }\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context($feature, $value);\n\n  @if (breakpoint-get('to ems') == true) {\n    $value: breakpoint-to-base-em($value);\n  }\n\n  @return '(#{$feature}: #{$value})'\n}\n",
		"//////////////////////////////\n// Import Pieces\n//////////////////////////////\n@import \"triple/default\";\n\n@function breakpoint-parse-triple($feature, $empty-media, $first) {\n  $parsed: '';\n  $leader: '';\n\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  // separate the string features from the value numbers\n  $string: null;\n  $numbers: null;\n  @each $val in $feature {\n    @if type-of($val) == string {\n      $string: $val;\n    }\n    @else {\n      @if type-of($numbers) == 'null' {\n        $numbers: $val;\n      }\n      @else {\n        $numbers: append($numbers, $val);\n      }\n    }\n  }\n\n  $parsed: breakpoint-parse-triple-default($string, nth($numbers, 1), nth($numbers, 2));\n\n  @return $leader + $parsed;\n\n}\n",
		"@function breakpoint-parse-triple-default($feature, $first, $second) {\n\n  // Sort into min and max\n  $min: min($first, $second);\n  $max: max($first, $second);\n\n  // Set Context\n  $context-setter: private-breakpoint-set-context(min-#{$feature}, $min);\n  $context-setter: private-breakpoint-set-context(max-#{$feature}, $max);\n\n  // Make them EMs if need be\n  @if (breakpoint-get('to ems') == true) {\n    $min: breakpoint-to-base-em($min);\n    $max: breakpoint-to-base-em($max);\n  }\n\n  @return '(min-#{$feature}: #{$min}) and (max-#{$feature}: #{$max})';\n}\n",
		"@import \"resolution/resolution\";\n\n@function breakpoint-build-resolution($query-print, $query-resolution, $empty-media, $first) {\n  $leader: '';\n  // If we're forcing\n  @if not ($empty-media) or not ($first) {\n    $leader: 'and ';\n  }\n\n  @if breakpoint-get('transform resolutions') and $query-resolution {\n    $resolutions: breakpoint-make-resolutions($query-resolution);\n    $length: length($resolutions);\n    $query-holder: '';\n\n    @for $i from 1 through $length {\n      $query: '#{$query-print} #{$leader}#{nth($resolutions, $i)}';\n      @if $i == 1 {\n        $query-holder: $query;\n      }\n      @else {\n        $query-holder: '#{$query-holder}, #{$query}';\n      }\n    }\n\n    @return $query-holder;\n  }\n  @else {\n    // Return with attached resolution\n    @return $query-print;\n  }\n}\n",
		"@function breakpoint-make-resolutions($resolution) {\n  $length: length($resolution);\n\n  $output: ();\n\n  @if $length == 2 {\n    $feature: '';\n    $value: '';\n\n    // Find which is number\n    @if type-of(nth($resolution, 1)) == 'number' {\n      $value: nth($resolution, 1);\n    }\n    @else {\n      $value: nth($resolution, 2);\n    }\n\n    // Determine min/max/standard\n    @if index($resolution, 'min-resolution') {\n      $feature: 'min-';\n    }\n    @else if index($resolution, 'max-resolution') {\n      $feature: 'max-';\n    }\n\n    $standard: '(#{$feature}resolution: #{$value})';\n\n    // If we're not dealing with dppx,\n    @if unit($value) != 'dppx' {\n      $base: 96dpi;\n      @if unit($value) == 'dpcm' {\n        $base: 243.84dpcm;\n      }\n      // Write out feature tests\n      $webkit: '';\n      $moz: '';\n      $webkit: '(-webkit-#{$feature}device-pixel-ratio: #{$value / $base})';\n      $moz: '(#{$feature}-moz-device-pixel-ratio: #{$value / $base})';\n      // Append to output\n      $output: append($output, $standard, space);\n      $output: append($output, $webkit, space);\n      $output: append($output, $moz, space);\n    }\n    @else {\n      $webkit: '';\n      $moz: '';\n      $webkit: '(-webkit-#{$feature}device-pixel-ratio: #{$value / 1dppx})';\n      $moz: '(#{$feature}-moz-device-pixel-ratio: #{$value / 1dppx})';\n      $fallback: '(#{$feature}resolution: #{$value / 1dppx * 96dpi})';\n      // Append to output\n      $output: append($output, $standard, space);\n      $output: append($output, $webkit, space);\n      $output: append($output, $moz, space);\n      $output: append($output, $fallback, space);\n    }\n\n  }\n\n  @return $output;\n}\n",
		"@function breakpoint-no-query($query) {\n  @if type-of($query) == 'list' {\n    $keyword: nth($query, 1);\n\n    @if type-of($keyword) == 'string' and ($keyword == 'no-query' or $keyword == 'no query' or $keyword == 'fallback') {\n      @return nth($query, 2);\n    }\n    @else {\n      @return false;\n    }\n  }\n  @else {\n    @return false;\n  }\n}\n",
		"////////////////////////\n// Default the Breakpoints variable\n////////////////////////\n$breakpoints: () !default;\n$BREAKPOINTS: () !default;\n\n////////////////////////\n// Respond-to API Mixin\n////////////////////////\n@mixin respond-to($context, $no-query: false) {\n  @if length($breakpoints) > 0 and length($BREAKPOINTS) == 0 {\n    @warn \"In order to avoid variable namespace collisions, we have updated the way to add breakpoints for respond-to. Please change all instances of `$breakpoints: add-breakpoint()` to `@include add-breakpoint()`. The `add-breakpoint()` function will be deprecated in a future release.\";\n    $BREAKPOINTS: $breakpoints !global;\n    $breakpoints: () !global;\n  }\n\n  @if type-of($BREAKPOINTS) != 'map' {\n    // Just in case someone writes gibberish to the $breakpoints variable.\n    @warn \"Your breakpoints aren't a map! `respond-to` expects a map. Please check the value of $BREAKPOINTS variable.\";\n    @content;\n  }\n  @else if map-has-key($BREAKPOINTS, $context) {\n    @include breakpoint(map-get($BREAKPOINTS, $context), $no-query) {\n      @content;\n    }\n  }\n  @else if not map-has-key($BREAKPOINTS, $context) {\n    @warn \"`#{$context}` isn't a defined breakpoint! Please add it using `$breakpoints: add-breakpoint(`#{$context}`, $value);`\";\n    @content;\n  }\n  @else {\n    @warn \"You haven't created any breakpoints yet! Make some already! `@include add-breakpoint($name, $bkpt)`\";\n    @content;\n  }\n}\n\n//////////////////////////////\n// Add Breakpoint to Breakpoints\n// TODO: Remove function in next release\n//////////////////////////////\n@function add-breakpoint($name, $bkpt, $overwrite: false) {\n  $output: ($name: $bkpt);\n\n  @if length($breakpoints) == 0 {\n    @return $output;\n  }\n  @else {\n    @if map-has-key($breakpoints, $name) and $overwrite != true {\n      @warn \"You already have a breakpoint named `#{$name}`, please choose another breakpoint name, or pass in `$overwrite: true` to overwrite the previous breakpoint.\";\n      @return $breakpoints;\n    }\n    @else if not map-has-key($breakpoints, $name) or $overwrite == true {\n      @return map-merge($breakpoints, $output);\n    }\n  }\n}\n\n@mixin add-breakpoint($name, $bkpt, $overwrite: false) {\n  $output: ($name: $bkpt);\n\n  @if length($BREAKPOINTS) == 0 {\n    $BREAKPOINTS: $output !global;\n  }\n  @else {\n    @if map-has-key($BREAKPOINTS, $name) and $overwrite != true {\n      @warn \"You already have a breakpoint named `#{$name}`, please choose another breakpoint name, or pass in `$overwrite: true` to overwrite the previous breakpoint.\";\n      $BREAKPOINTS: $BREAKPOINTS !global;\n    }\n    @else if not map-has-key($BREAKPOINTS, $name) or $overwrite == true {\n      $BREAKPOINTS: map-merge($BREAKPOINTS, $output) !global;\n    }\n  }\n}\n\n@function get-breakpoint($name: false) {\n  @if $name == false {\n    @return $BREAKPOINTS;\n  }\n  @else {\n    @return map-get($BREAKPOINTS, $name);\n  }\n}\n",
		"@mixin legacy-settings-warning {\n  $legacyVars: (\n    'default-media': 'default media',\n    'default-feature': 'default feature',\n    'force-media-all': 'force all media type',\n    'to-ems': 'to ems',\n    'resolutions': 'transform resolutions',\n    'no-queries': 'no queries',\n    'no-query-fallbacks': 'no query fallbacks',\n    'base-font-size': 'base font size',\n    'legacy-syntax': 'legacy syntax'\n  );\n\n  @each $legacy, $new in $legacyVars {\n    @if global-variable-exists('breakpoint-' + $legacy) {\n      @warn \"In order to avoid variable namspace collisions, we have updated the way to change settings for Breakpoint. Please change all instances of `$breakpoint-#{$legacy}: ` to `@include breakpoint-set('#{$new}', )`. Variable settings, as well as this warning will be deprecated in a future release.\"\n    }\n  };\n\n  //////////////////////////////\n  // Hand correct each setting\n  //////////////////////////////\n  @if global-variable-exists('breakpoint-default-media') and $breakpoint-default-media != breakpoint-get('default media') {\n    @include breakpoint-set('default media', $breakpoint-default-media);\n  }\n  @if global-variable-exists('breakpoint-default-feature') and $breakpoint-default-feature != breakpoint-get('default feature') {\n    @include breakpoint-set('default feature', $breakpoint-default-feature);\n  }\n  @if global-variable-exists('breakpoint-force-media-all') and $breakpoint-force-media-all != breakpoint-get('force all media type') {\n    @include breakpoint-set('force all media type', $breakpoint-force-media-all);\n  }\n  @if global-variable-exists('breakpoint-to-ems') and $breakpoint-to-ems != breakpoint-get('to ems') {\n    @include breakpoint-set('to ems', $breakpoint-to-ems);\n  }\n  @if global-variable-exists('breakpoint-resolutions') and $breakpoint-resolutions != breakpoint-get('transform resolutions') {\n    @include breakpoint-set('transform resolutions', $breakpoint-resolutions);\n  }\n  @if global-variable-exists('breakpoint-no-queries') and $breakpoint-no-queries != breakpoint-get('no queries') {\n    @include breakpoint-set('no queries', $breakpoint-no-queries);\n  }\n  @if global-variable-exists('breakpoint-no-query-fallbacks') and $breakpoint-no-query-fallbacks != breakpoint-get('no query fallbacks') {\n    @include breakpoint-set('no query fallbacks', $breakpoint-no-query-fallbacks);\n  }\n  @if global-variable-exists('breakpoint-base-font-size') and $breakpoint-base-font-size != breakpoint-get('base font size') {\n    @include breakpoint-set('base font size', $breakpoint-base-font-size);\n  }\n  @if global-variable-exists('breakpoint-legacy-syntax') and $breakpoint-legacy-syntax != breakpoint-get('legacy syntax') {\n    @include breakpoint-set('legacy syntax', $breakpoint-legacy-syntax);\n  }\n}",
		"@import 'mixins/color';\n@import 'mixins/clearfix';\n@import 'mixins/fluid-type';\n@import 'mixins/float';\n@import 'mixins/image';\n@import 'mixins/lists';\n@import 'mixins/text-truncate';\n",
		"/* ==========================================================================\n   Color Functions\n   ========================================================================== */\n\n/// Slightly lighten a color\n/// @access public\n/// @param {Color} $color - color to tint\n/// @param {Number} $percentage - percentage of `$color` in returned color\n/// @return {Color}\n@function tint($color, $percentage) {\n  @return mix(#fff, $color, $percentage);\n}\n\n/// Slightly darken a color\n/// @access public\n/// @param {Color} $color - color to shade\n/// @param {Number} $percentage - percentage of `$color` in returned color\n/// @return {Color}\n@function shade($color, $percentage) {\n  @return mix(#000, $color, $percentage);\n}\n",
		"/* ==========================================================================\n   Clearfix Mixin\n   ========================================================================== */\n\n@mixin clearfix() {\n  &::after {\n    display: block;\n    clear: both;\n    content: '';\n  }\n}\n",
		"/* ==========================================================================\n   Fluid Type\n   as seen on https://madebymike.com.au/writing/fluid-type-calc-examples/\n   ========================================================================== */\n\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {\n  // scss-lint:disable UnnecessaryParentReference\n  $u1: unit($min-vw);\n  $u2: unit($max-vw);\n  $u3: unit($min-font-size);\n  $u4: unit($max-font-size);\n\n  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {\n    & {\n\n      font-size: $min-font-size;\n\n      @media screen and (min-width: $min-vw) {\n        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));\n      }\n\n      @media screen and (min-width: $max-vw) {\n        font-size: $max-font-size;\n      }\n    }\n  } @else {\n    @error \"Detected mixed units. Please use the same units for all parameters. \" + $u1 +\", \" + $u2 + \", \" + $u3 +\", \"+ $u4;\n  }\n}\n",
		"/* ==========================================================================\n   Float Mixins\n   ========================================================================== */\n\n@mixin float-left {\n  float: left !important;\n}\n\n@mixin float-right {\n  float: right !important;\n}\n\n@mixin float-none {\n  float: none !important;\n}\n",
		"/* ==========================================================================\n   Image Mixins\n   - Responsive image\n   - Retina image\n   ========================================================================== */\n\n/*\n   Responsive image\n   Keep images from scaling beyond the width of their parents.\n   ========================================================================== */\n\n@mixin img-fluid {\n  // Part 1: Set a maximum relative to the parent\n  max-width: 100%;\n  // Part 2: Override the height to auto, otherwise images will be stretched\n  // when setting a width and height attribute on the img element.\n  height: auto;\n}\n\n/*\n   Retina image\n   Short retina mixin for setting background-image and -size.\n   ========================================================================== */\n\n@mixin img-retina($file-1x, $file-2x, $width-1x, $height-1x) {\n  background-image: url($file-1x);\n\n  // Autoprefixer takes care of adding -webkit-min-device-pixel-ratio and -o-min-device-pixel-ratio,\n  // but doesn't convert dppx=>dpi.\n  // There's no such thing as unprefixed min-device-pixel-ratio since it's nonstandard.\n  // Compatibility info: http://caniuse.com/#feat=css-media-resolution\n  @media\n  only screen and (min-resolution: 192dpi), // IE9-11 don't support dppx\n  only screen and (min-resolution: 2dppx) { // Standardized\n    background-image: url($file-2x);\n    background-size: $width-1x $height-1x;\n  }\n}\n",
		"/* ==========================================================================\n   List Mixins\n   ========================================================================== */\n\n// Unstyled keeps list items block level, just removes default browser padding and list-style\n@mixin list-unstyled {\n  padding-left: 0;\n  list-style: none;\n}\n",
		"/* ==========================================================================\n   Text Truncate Mixin\n   Requires inline-block or block for proper styling\n   ========================================================================== */\n\n@mixin text-truncate() {\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n}\n",
		"/* ==========================================================================\n   Variables\n   ========================================================================== */\n\n/* Breakpoint widths */\n$small: 320px !default;\n$medium: 768px !default;\n$large: 1024px !default;\n$xlarge: 1280px !default;\n\n/* Fluid type */\n$base-font-size: 16px !default;\n$min-vw: $small !default;\n$max-vw: $xlarge !default;\n$min-font-size: 14px !default;\n$max-font-size: 18px !default;\n\n/* Calculate Modular Scale */\n$modular-scale-1: 1.067 !default; /* small */\n$modular-scale-2: 1.296 !default; /* large */\n/* Heading 1 */\n$h1-min: $modular-scale-1 * $modular-scale-1 * $modular-scale-1 * $modular-scale-1 * $base-font-size !default;\n$h1-max: $modular-scale-2 * $modular-scale-2 * $modular-scale-2 * $modular-scale-2 * $base-font-size !default;\n/* Heading 2 */\n$h2-min: $modular-scale-1 * $modular-scale-1 * $modular-scale-1 * $base-font-size !default;\n$h2-max: $modular-scale-2 * $modular-scale-2 * $modular-scale-2 * $base-font-size !default;\n/* Heading 3 */\n$h3-min: $modular-scale-1 * $modular-scale-1 * $base-font-size !default;\n$h3-max: $modular-scale-2 * $modular-scale-2 * $base-font-size !default;\n/* Heading 4 */\n$h4-min: $modular-scale-1 * $base-font-size !default;\n$h4-max: $modular-scale-2 * $base-font-size !default;\n/* Heading 5 */\n$h5-min: $base-font-size !default;\n$h5-max: $base-font-size !default;\n/* Heading 6 */\n$h6-min: ($base-font-size / $modular-scale-1) !default;\n$h6-max: ($base-font-size / $modular-scale-2) !default;\n\n/* Base font family */\n$base-font-family: \"Fira Sans\", sans-serif !default;\n/* Other font families */\n$headline-font-family: $base-font-family !default;\n$monospace-font-family: Menlo, Consolas, Monaco, \"Courier New\", Courier, monospace !default;\n\n/* Colors */\n$base-color: #393e46 !default;\n$text-color: #222831 !default;\n$accent-color: #00848a !default;\n$background-color: #fff !default;\n$code-background-color: tint($base-color, 95%) !default;\n$border-color: tint($base-color, 80%) !default;\n$overlay-color: $base-color !default;\n\n/* Max-width of the main content */\n$main-max-width: $xlarge !default;\n\n/* Width of the sidebar */\n$sidebar-width: $small !default;\n\n/* Background color of the sidebar */\n$sidebar-background-color: #fff !default;\n\n/* Border radius */\n$border-radius: 0.25em !default;\n\n/* Global transition */\n$global-transition: all 0.4s ease !default;\n\n/* Navicon */\n$navicon-width: 1.75em !default;\n$navicon-height: 0.25em !default;\n$navicon-duration: 0.5s !default;\n$navicon-toggled-size: 1 !default;\n$navicon-nav-bg-close: transparent !default;\n$navicon-nav-bg-open: transparent !default;\n$navicon-content-bg: $text-color !default;\n\n/* Site image */\n$site-image-width: 50px !default;\n$site-image-height: 50px !default;\n\n/* Susy grid settings */\n$susy: (columns: 16, gutters: 0, math: fluid, output: float) !default;\n",
		"/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/**\n * 1. Change the default font family in all browsers (opinionated).\n * 2. Prevent adjustments of font size after orientation changes in\n *    IE on Windows Phone and in iOS.\n */\n\n/* Document\n   ========================================================================== */\n\nhtml {\n  font-family: $base-font-family; /* 1 */\n  box-sizing: border-box;\n  -ms-text-size-adjust: 100%; /* 2 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers (opinionated).\n */\n\nbody {\n  margin: 0;\n  line-height: 1.5;\n}\n\n/**\n * Add the correct display in IE 9-.\n */\n\narticle,\naside,\nfooter,\nheader,\nnav,\nsection {\n  display: block;\n}\n\n/**\n * Remove margin padding.\n *\n */\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\npre,\nblockquote,\ndl,\ntable,\naddress {\n  margin-top: 0;\n  margin-bottom: 1.5rem;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n}\n\n/**\n * Adjust heading line-height\n *\n */\n\nh1,\nh2,\nh3,\nh4 {\n  line-height: 1.2;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n * 1. Add the correct display in IE.\n */\n\nfigcaption,\nfigure,\nmain { /* 1 */\n  display: block;\n}\n\n/**\n * Reset the margins.\n */\n\nfigure {\n  margin: 1rem 0 1.5rem;\n}\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n  box-sizing: content-box; /* 1 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n * 3. Add scrollbars to wide code blocks.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n  overflow-x: auto;  /* 3 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * 1. Remove the gray background on active links in IE 10.\n * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.\n */\n\na {\n  background-color: transparent; /* 1 */\n  -webkit-text-decoration-skip: objects; /* 2 */\n}\n\n/**\n * Remove the outline on focused links when they are also active or hovered\n * in all browsers (opinionated).\n */\n\na:active,\na:hover {\n  outline-width: 0;\n}\n\n/**\n * 1. Remove the bottom border in Firefox 39-.\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Prevent the duplicate application of `bolder` by the next rule in Safari 6.\n */\n\nb,\nstrong {\n  font-weight: inherit;\n  font-weight: bolder; /* Add the correct font weight in Chrome, Edge, and Safari. */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font style in Android 4.3-.\n */\n\ndfn {\n  font-style: italic;\n}\n\n/**\n * Add the correct background and color in IE 9-.\n */\n\nmark {\n  background-color: #ff0;\n  color: #000;\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Change the margin and padding and add a line rule on the left-side in all\n * browsers (opinionated).\n */\n\nblockquote {\n  margin-right: 0;\n  margin-left: 0;\n  padding: 0 1rem;\n  border-left: solid 0.25rem;\n\n  *:last-child {\n    margin-bottom: 0;\n  }\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  position: relative;\n  font-size: 75%;\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/**\n * Remove margin\n */\n\nul,\nol {\n  margin-top: 0;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\naudio,\nvideo {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in iOS 4-7.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\nimg {\n  /* Responsive images (ensure images don't scale beyond their parents) */\n  max-width: 100%; /* part 1: Set a maximum relative to the parent*/\n  width: auto\\9; /* IE7-8 need help adjusting responsive images*/\n  height: auto; /* part 2: Scale the height according to the width, otherwise you get stretching*/\n\n  border-style: none; /* Remove the border on images inside links in IE 10-.*/\n\n  vertical-align: middle;\n  -ms-interpolation-mode: bicubic;\n}\n\n/**\n * Hide the overflow in IE.\n */\n\nsvg:not(:root) {\n  overflow: hidden;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers (opinionated).\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  margin: 0; /* 2 */\n  font-family: $base-font-family; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n *    controls in Android 4.\n * 2. Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\nhtml [type=\"button\"], /* 1 */\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type=\"button\"]:-moz-focusring,\n[type=\"reset\"]:-moz-focusring,\n[type=\"submit\"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Change the border, margin, and padding in all browsers (opinionated).\n */\n\nfieldset {\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n  border: 1px solid #c0c0c0;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  color: inherit; /* 2 */\n  white-space: normal; /* 1 */\n  box-sizing: border-box; /* 1 */\n}\n\n/**\n * 1. Add the correct display in IE 9-.\n * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  display: inline-block; /* 1 */\n  vertical-align: baseline; /* 2 */\n}\n\n/**\n * Remove the default vertical scrollbar in IE.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10-.\n * 2. Remove the padding in IE 10-.\n */\n\n[type=\"checkbox\"],\n[type=\"radio\"] {\n  padding: 0; /* 2 */\n  box-sizing: border-box; /* 1 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type=\"search\"] {\n  outline-offset: -2px; /* 2 */\n  -webkit-appearance: textfield; /* 1 */\n}\n\n/**\n * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.\n */\n\n[type=\"search\"]::-webkit-search-cancel-button,\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  font: inherit; /* 2 */\n  -webkit-appearance: button; /* 1 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in IE 9-.\n * 1. Add the correct display in Edge, IE, and Firefox.\n */\n\ndetails, /* 1 */\nmenu {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Scripting\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 9-.\n */\n\ncanvas {\n  display: inline-block;\n}\n\n/**\n * Add the correct display in IE.\n */\n\ntemplate {\n  display: none;\n}\n\n/* Hidden\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10-.\n */\n\n[hidden] {\n  display: none;\n}\n",
		"/* ==========================================================================\n   Base elements\n   ========================================================================== */\n\nhtml {\n  @include fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size);\n}\n\nbody {\n  display: -ms-flexbox;\n  display: flex;\n  background: $background-color;\n  color: $text-color;\n}\n\nblockquote,\nq {\n  color: tint($text-color, 40%);\n  font-style: italic;\n\n  cite {\n    font-size: 80%;\n    font-style: normal;\n    font-weight: bold;\n\n    &::before {\n      padding-right: 0.25rem;\n      content: '\\2014';\n    }\n  }\n}\n\ncode,\nkbd,\nsamp,\npre {\n  font-family: $monospace-font-family;\n}\n\nkbd {\n  display: inline-block;\n  margin: 0 0.125em;\n  padding: 0.125em 0.5em;\n  border: 1px solid rgb(204, 204, 204);\n  border-radius: 3px;\n  background-color: rgb(247, 247, 247);\n  text-shadow: 0 1px 0 #fff;\n  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.25), inset 0 0 0 2px #fff;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-family: $headline-font-family;\n  text-rendering: optimizeLegibility; /* enable common ligatures and kerning */\n}\n\nh1 {\n  @include fluid-type($min-vw, $max-vw, $h1-min, $h1-max);\n}\n\nh2 {\n  @include fluid-type($min-vw, $max-vw, $h2-min, $h2-max);\n}\n\nh3 {\n  @include fluid-type($min-vw, $max-vw, $h3-min, $h3-max);\n}\n\nh4 {\n  @include fluid-type($min-vw, $max-vw, $h4-min, $h4-max);\n}\n\nh5 {\n  @include fluid-type($min-vw, $max-vw, $h5-min, $h5-max);\n}\n\nh6 {\n  @include fluid-type($min-vw, $max-vw, $h6-min, $h6-max);\n}\n\ndt {\n  font-weight: bold;\n\n  &:not(:first-child) {\n    margin-top: 1rem;\n  }\n}\n\ndd {\n  margin: 0;\n}\n\npre {\n  @include fluid-type($min-vw, $max-vw, 12px, 14px);\n}\n\nfigcaption {\n  margin: 0.5rem 0;\n  font-size: 80%;\n}\n\na {\n  color: $accent-color;\n\n  &:hover {\n    color: shade($accent-color, 25%);\n  }\n}\n\n*:focus {\n  border-color: $accent-color;\n  outline: none;\n  box-shadow: 0 0 10px $accent-color;\n}\n",
		"/* ==========================================================================\n   Layout\n   ========================================================================== */\n\n.canvas {\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n}\n\n.wrapper {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  min-height: 100vh;\n  transform: translateX(0);\n  transition: $global-transition;\n  background-color: $background-color;\n  z-index: 100;\n  -webkit-backface-visibility: hidden;\n  backface-visibility: hidden;\n}\n\n.intro,\nmain {\n\n  > .inner {\n    padding: 0 0.5rem;\n\n    @include breakpoint($small) {\n      padding-right: 1rem;\n      padding-left: 1rem;\n    }\n\n    @include breakpoint($medium) {\n      padding-right: 2rem;\n      padding-left: 2rem;\n    }\n\n    @include breakpoint($large) {\n      padding-right: 3rem;\n      padding-left: 3rem;\n    }\n\n    @include breakpoint($xlarge) {\n      padding-right: 4rem;\n      padding-left: 4rem;\n    }\n  }\n}\n\nmain {\n\n  section {\n    @include container;\n  }\n}\n\n.inner {\n  max-width: $large;\n}\n\n/*\n   Layout specific adjustments\n   ========================================================================== */\n\n.layout--post,\n.layout--page {\n\n  .entry-content {\n\n    @include breakpoint($large) {\n      width: span(14 of 16);\n    }\n  }\n}\n\n.layout--about {\n\n  .entry-wrap {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-wrap: wrap;\n    flex-wrap: wrap;\n\n    @include breakpoint($medium) {\n      -ms-flex-wrap: nowrap;\n      flex-wrap: nowrap;\n    }\n  }\n\n  .entry-content {\n\n    @include breakpoint($medium) {\n      -ms-flex: 1;\n      flex: 1;\n    }\n  }\n\n  .entry-sidebar {\n    order: -1;\n    -ms-flex-order: -1;\n\n    @include breakpoint($medium) {\n      order: initial;\n      -ms-flex-order: initial;\n    }\n\n    .author-picture {\n      margin: 0 0 2rem;\n      border-radius: 2 * $border-radius;\n\n      @include breakpoint($medium) {\n        margin: 0 0 0 2rem;\n      }\n    }\n  }\n}\n\n.layout--cv {\n\n  .entries {\n\n    .entry-header {\n\n      @include breakpoint($medium) {\n        @include span(5 of 16);\n        @include suffix(1 of 16);\n\n        /* remove space after last child element */\n        > *:last-child {\n          margin-bottom: 0;\n        }\n      }\n    }\n\n    .entry-content {\n      @include breakpoint($medium) {\n        @include span(11 of 16 last);\n      }\n    }\n  }\n\n  .entry {\n\n    a {\n      color: $accent-color;\n    }\n\n    address {\n      font-style: normal;\n    }\n\n    .title,\n    .position,\n    .institution,\n    .language {\n      margin-bottom: 0;\n    }\n\n    .date {\n      margin-bottom: 1rem;\n      color: tint($text-color, 40%);\n      font-family: $monospace-font-family;\n      font-size: 80%;\n    }\n\n    .courses-title,\n    .awarder,\n    .publisher,\n    .level {\n      margin: 1rem 0 0;\n    }\n\n    .courses,\n    .keywords {\n      @include list-unstyled;\n    }\n  }\n\n  .taxonomy {\n\n    + .taxonomy {\n      margin-top: 0.5rem;\n    }\n\n    .title {\n      display: inline-block;\n      margin-right: 1rem;\n    }\n\n    .keywords {\n      display: inline-block;\n    }\n  }\n}\n",
		"/* ==========================================================================\n   Tables\n   ========================================================================== */\n\ntable {\n  @include fluid-type($min-vw, $max-vw, 12px, 18px);\n  width: 100%;\n  border-collapse: collapse;\n  /* For Firefox to horizontally scroll wider tables */\n  // scss-lint:disable DuplicateProperty\n  word-break: normal;\n  word-break: keep-all;\n}\n\nth,\ntd {\n  border-bottom: 1px solid $border-color;\n}\n\nth {\n  padding: 0.5em;\n  font-weight: bold;\n  text-align: left;\n}\n\ntd {\n  padding: 0.5em;\n}\n\ntr,\ntd,\nth {\n  vertical-align: middle;\n}\n",
		"/* ==========================================================================\n   Site-wide\n   ========================================================================== */\n\n.site-title {\n  @include fluid-type($min-vw, $max-vw, 20px, 24px);\n  margin: 0;\n  padding: 1.8125rem 1rem;\n  padding-right: calc(10vw + #{$navicon-width}); /* make room for sidebar toggle */\n  font-family: $base-font-family;\n  font-weight: bold;\n  line-height: 1;\n\n  @include breakpoint($medium) {\n    padding-left: 2rem;\n  }\n\n  @include breakpoint($large) {\n    padding-left: 5vw;\n  }\n\n  a {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: center;\n    align-items: center;\n    min-height: $site-image-height;\n    color: $text-color;\n    text-decoration: none;\n  }\n}\n\n.site-logo {\n  width: $site-image-width;\n  height: $site-image-height;\n  margin-right: 0.5rem;\n  border-radius: 50%;\n}\n",
		"/* ==========================================================================\n   Sidebar\n   ========================================================================== */\n\n.sidebar {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  max-width: $sidebar-width;\n  height: 100%;\n  z-index: 50;\n  visibility: hidden;\n  -webkit-transition: visibility 0s 0.3s;\n  transition: visibility 0s 0.3s;\n\n  @include breakpoint($large) {\n    max-width: (1.5 * $sidebar-width);\n  }\n\n  &.is--visible {\n    visibility: visible;\n    -webkit-transition: visibility 0s 0s;\n    transition: visibility 0s 0s;\n  }\n\n  li {\n    transform: translateX(-1rem);\n    transition: all 0.5s;\n    opacity: 0;\n\n    &.is--moved {\n      transform: translateX(0);\n      opacity: 1;\n    }\n\n    /* line hover effect */\n    a {\n      position: relative;\n      color: $base-color;\n\n      &::before {\n        display: block;\n        position: absolute;\n        top: 50%;\n        left: -3rem;\n        width: 0;\n        height: 1px;\n        transition: width 0.3s cubic-bezier(0, 0, 0.3, 1);\n        background-color: $base-color;\n        content: '';\n      }\n\n      &:hover {\n        color: $accent-color;\n      }\n\n      &:hover::before {\n        width: 2.5rem;\n      }\n    }\n  }\n\n  > .inner {\n    width: 100%;\n    height: 100%;\n    padding: 1.5em;\n    background-color: $sidebar-background-color;\n    overflow-x: hidden;\n    box-shadow: inset -1em 0 5em 0 rgba(0, 0, 0, 0.125);\n\n    @include breakpoint($medium) {\n      padding: 3rem;\n    }\n  }\n\n  .menu {\n    @include fluid-type($min-vw, $max-vw, 24px, 48px);\n    position: relative;\n    margin-bottom: 1.5rem;\n    padding-bottom: 0.5rem;\n    font-weight: bold;\n    line-height: 1;\n\n    a {\n      display: block;\n    }\n\n    /* divider line */\n    &::after {\n      position: absolute;\n      bottom: 0;\n      width: 1.5em;\n      height: 1px;\n      background-color: $base-color;\n      content: '';\n    }\n\n    li {\n      margin-bottom: 1.5rem;\n    }\n  }\n\n  .contact-list {\n    @include fluid-type($min-vw, $max-vw, 18px, 24px);\n    margin-top: 0.5rem;\n    padding-top: 0.5rem;\n\n    li:not(:last-child) {\n      margin-bottom: 0.5rem;\n    }\n\n    a {\n      display: block;\n      color: $base-color;\n      text-decoration: none;\n    }\n  }\n}\n\n.sidebar-toggle-wrapper {\n  position: fixed;\n  top: 0.675rem;\n  right: 0;\n  cursor: pointer;\n  z-index: 10000;\n\n  .toggle-inner {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-align: center;\n    align-items: center;\n  }\n}\n\n.sidebar-toggle-label {\n  -ms-flex-order: 2;\n  order: 2;\n  margin-left: 0.5rem;\n  font-weight: bold;\n}\n",
		"/* ==========================================================================\n   Navigation\n   ========================================================================== */\n\n.menu {\n  @include list-unstyled;\n\n  a {\n    color: inherit;\n    text-decoration: none;\n  }\n}\n\n/*\n   Skip links\n   ========================================================================== */\n\n.skip-links {\n  position: absolute;\n  width: 100%;\n\n  ul {\n    @include list-unstyled;\n  }\n}\n\n/*\n   Paginator\n   ========================================================================== */\n\n.pager {\n  @include clearfix();\n  margin-bottom: 2rem;\n\n  ul {\n    @include list-unstyled;\n    display: -ms-flexbox;\n    display: flex;\n\n    > li {\n      -ms-flex: 1;\n      flex: 1;\n      justify-content: space-between;\n      -ms-flex-pack: justify;\n    }\n\n    li + li {\n      margin-left: 0.125em;\n    }\n  }\n\n  a {\n    display: block;\n    padding: 1em;\n    border-radius: $border-radius;\n    background-color: $accent-color;\n    color: #fff;\n    font-weight: bold;\n    text-align: center;\n    text-decoration: none;\n\n    &:hover {\n      background-color: tint($accent-color, 20%);\n    }\n  }\n}\n",
		"/* ==========================================================================\n   Footer\n   ========================================================================== */\n\n.site-footer {\n  margin-top: 4rem;\n  color: tint($text-color, 40%);\n  font-size: 80%;\n}\n\n.copyright {\n  font-family: $monospace-font-family;\n}\n",
		"/* ==========================================================================\n   Entries (Posts, collection documents, etc.)\n   ========================================================================== */\n\n.entry {\n  @include clearfix();\n  margin-bottom: 2rem;\n  padding-bottom: 2rem;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid $border-color;\n  }\n\n  a {\n    color: inherit;\n  }\n}\n\n.entry-title {\n  @include fluid-type($min-vw, $max-vw, 18px, 24px);\n  margin-bottom: 0.5rem;\n  color: tint($text-color, 25%);\n  line-height: inherit;\n\n  a {\n    text-decoration: none;\n  }\n}\n\n.entry-meta {\n  @include fluid-type($min-vw, $max-vw, 12px, 16px);\n  margin-bottom: 1rem;\n\n  a {\n    color: inherit;\n  }\n\n  .byline-item {\n\n    &:not(:first-child) {\n      margin-left: 1.5rem;\n    }\n  }\n\n  .icon {\n    margin-right: 0.5em;\n    fill: $accent-color;\n  }\n}\n\n/*\n   Entry list\n   ========================================================================== */\n\n.entries {\n\n  .entry-title {\n    word-wrap: break-word; /* break long words that could overflow */\n\n    a:hover {\n      color: $accent-color;\n    }\n  }\n\n  .entry-excerpt {\n    @include breakpoint($medium) {\n      @include span(11 of 16);\n    }\n\n    /* normalize font sizes */\n    > * {\n      font-size: 1em;\n    }\n\n    /* remove space after last child element */\n    > *:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  .entry-content {\n    @include breakpoint($medium) {\n      @include span(11 of 16);\n    }\n\n    /* remove space after last child element */\n    > *:last-child {\n      margin-bottom: 0;\n    }\n  }\n\n  .entry-meta {\n    @include breakpoint($medium) {\n      @include span(5 of 16 last);\n      @include prefix(1 of 16);\n    }\n\n    ul {\n      @include list-unstyled();\n\n      @include breakpoint(max-width $medium) {\n        li {\n          display: inline-block;\n          margin-right: 1.5rem;\n        }\n      }\n\n      @include breakpoint($medium) {\n        li {\n          padding-bottom: 0.5rem;\n        }\n      }\n    }\n  }\n\n  > .summary {\n\n    > p:first-child {\n      font-size: 1.125em;\n      line-height: 1.625;\n    }\n  }\n}\n\n.entry-content {\n\n  > p:first-child {\n    font-size: 1.125em;\n    line-height: 1.625;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    color: tint($text-color, 25%);\n  }\n}\n\n/* Footnotes */\n.footnotes {\n  margin: 2rem 0;\n  padding-top: 1rem;\n  border-top: 1px solid $border-color;\n  font-size: 80%;\n}\n\n/* Read more link */\n.more-link {\n  font-size: 75%;\n  font-weight: bold;\n  text-decoration: none;\n}\n",
		"/* ==========================================================================\n   Buttons\n   ========================================================================== */\n\n.btn {\n  display: inline-block;\n  padding: 0.5em 1em;\n  border: 0;\n  border-radius: $border-radius;\n  background-color: $accent-color;\n  color: #fff;\n  font-weight: bold;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: tint($accent-color, 20%);\n    color: #fff;\n  }\n\n  &:focus {\n    background-color: shade($accent-color, 20%);\n  }\n\n  .icon {\n    margin-right: 0.5em;\n  }\n\n  /* block button fills width of parent container */\n  &--block {\n    display: block;\n    width: 100%;\n\n    + .btn--block {\n      margin-top: 1rem;\n    }\n  }\n}\n",
		"/* ==========================================================================\n   Icons\n   ========================================================================== */\n\n.icon {\n  display: inline-block;\n  position: relative;\n  top: -0.05em; /* fine-tune alignment */\n  width: 1em;\n  height: 1em;\n  line-height: 1;\n  vertical-align: middle;\n  fill: currentColor;\n\n  $icons: (\n    (bitbucket, #205081),\n    (codepen, #000),\n    (dribbble, #ea4c89),\n    (email, #000),\n    (facebook, #3b5998),\n    (flickr, #0063dc),\n    (github, #181717),\n    (gitlab, #e24329),\n    (googleplus, #dc4e41),\n    (instagram, #e4405f),\n    (lastfm, #d51007),\n    (linkedin, #0077b5),\n    (pinterest, #bd081c),\n    (rss, #ffa500),\n    (soundcloud, #f30),\n    (stackoverflow, #fe7a16),\n    (tumblr, #36465d),\n    (twitter, #1da1f2),\n    (xing, #005a5f),\n    (youtube, #cd201f)\n  );\n\n  @each $icon, $color in $icons {\n    &--#{$icon} {\n      fill: $color;\n    }\n  }\n}\n",
		"/* ==========================================================================\n   Page intro\n   ========================================================================== */\n\n.intro {\n  margin: 1rem 0;\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n}\n\n.intro-image {\n  position: relative;\n  margin-top: -3rem; /* compensate for intro top margin */\n  margin-bottom: 3rem;\n\n  &::before {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    background-color: rgba($accent-color, 0.25);\n    content: '';\n  }\n\n  img {\n    width: 100%;\n  }\n}\n\n.intro-text {\n\n  /* remove space after last child element */\n  > *:last-child {\n    margin-bottom: 0;\n  }\n}\n\n.intro-title {\n  @include fluid-type($min-vw, $max-vw, 26px, 80px);\n  margin-bottom: 1rem;\n  color: tint($text-color, 25%);\n  line-height: 1;\n}\n\n.intro-subtitle {\n  @include fluid-type($min-vw, $max-vw, 18px, 28px);\n  font-style: italic;\n}\n\n.intro-actions {\n  @include list-unstyled;\n\n  li {\n    display: inline-block;\n  }\n}\n\n.intro-more {\n\n  > p:first-child {\n    font-size: 1.125em;\n    line-height: 1.625;\n  }\n}\n",
		"/* ==========================================================================\n   Navicons\n   ========================================================================== */\n\n.navicon-button {\n  display: inline-block;\n  position: relative;\n  margin: 0.90625rem 0;\n  padding: 0.90625rem 1rem;\n  transition: $navicon-duration / 2;\n  border: 0;\n  outline: none;\n  background-color: $navicon-nav-bg-close;\n  line-height: 5 * $navicon-height;\n  cursor: pointer;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  -webkit-user-select: none;\n  user-select: none;\n\n  @include breakpoint($medium) {\n    margin-right: 2rem;\n  }\n\n  @include breakpoint($large) {\n    margin-right: 5vw;\n  }\n\n  &.open {\n    background-color: $navicon-nav-bg-open;\n  }\n\n  .navicon::before,\n  .navicon::after {\n    transition-duration: $navicon-duration / 2;\n  }\n\n  &:hover {\n    transition-duration: $navicon-duration;\n\n    .navicon::before,\n    .navicon::after {\n      transition-duration: $navicon-duration / 2;\n    }\n\n    .navicon::before { top: (2.5 * $navicon-height); }\n    .navicon::after { top: (-2.5 * $navicon-height); }\n  }\n}\n\n.navicon {\n  position: relative;\n  width: $navicon-width;\n  height: $navicon-height;\n  transition-duration: $navicon-duration;\n  border-radius: $navicon-width;\n  background: $navicon-content-bg;\n\n  &::before,\n  &::after {\n    display: block;\n    position: absolute;\n    width: $navicon-width;\n    height: $navicon-height;\n    transition-duration: $navicon-duration $navicon-duration / 2;\n    border-radius: $navicon-width;\n    background: $navicon-content-bg;\n    content: '';\n  }\n\n  &::before { top: (2 * $navicon-height); }\n  &::after { top: (-2 * $navicon-height); }\n}\n\n.open:not(.steps) .navicon::before,\n.open:not(.steps) .navicon::after {\n  top: 0 !important;\n}\n\n.open {\n  transform: scale($navicon-toggled-size);\n\n  .navicon::before,\n  .navicon::after {\n    transition-duration: $navicon-duration;\n  }\n\n  /* Arrows */\n  &.larr .navicon,\n  &.rarr .navicon,\n  &.uarr .navicon {\n\n    &::before,\n    &::after {\n      width: (0.6 * $navicon-width);\n    }\n\n    &::before {\n      transform: rotate(35deg);\n      transform-origin: left top;\n    }\n\n    &::after {\n      transform: rotate(-35deg);\n      transform-origin: left bottom;\n    }\n  }\n\n  &.uarr {\n    transform: scale($navicon-toggled-size) rotate(90deg);\n  }\n\n  &.rarr .navicon {\n\n    &::before {\n      transform: translate3d(1em, 0, 0) rotate(-35deg);\n      transform-origin: right top;\n    }\n\n    &::after {\n      transform: translate3d(1em, 0, 0) rotate(35deg);\n      transform-origin: right bottom;\n    }\n  }\n}\n",
		"/* ==========================================================================\n   Contact lists\n   ========================================================================== */\n\n.contact-list {\n  @include list-unstyled;\n\n  .icon {\n    margin-right: 0.25em;\n  }\n}\n",
		"/* ==========================================================================\n   Syntax highlighting\n   ========================================================================== */\n\n.highlight {\n  padding: 1em;\n  background-color: $code-background-color;\n\n  pre {\n    width: 100%;\n    margin: 0;\n  }\n\n  table {\n    margin: 0;\n    border: 0;\n    font-size: 1em;\n\n    tr {\n      border: 0;\n    }\n\n    td {\n      padding: 5px;\n      border: 0;\n\n      /* line numbers gutter */\n      &.gutter {\n        padding-right: 1rem;\n      }\n    }\n\n    pre {\n      margin: 0;\n    }\n  }\n\n  /* line numbers */\n  .lineno {\n    color: tint($base-color, 50%);\n  }\n\n  /*\n     Solarized Light\n     http://ethanschoonover.com/solarized\n\n     SOLARIZED HEX      ROLE\n     --------- -------- ------------------------------------------\n     base01    #586e75  body text / default code / primary content\n     base1     #93a1a1  comments / secondary content\n     base3     #fdf6e3  background\n     orange    #cb4b16  constants\n     red       #dc322f  regex, special keywords\n     blue      #22b3eb  reserved keywords\n     cyan      #2aa198  strings, numbers\n     green     #859900  operators, other keywords\n     ========================================================================== */\n\n  .c { color: #93a1a1; } /* Comment */\n  .err { color: #586e75; } /* Error */\n  .g { color: #586e75; } /* Generic */\n  .k { color: #859900; } /* Keyword */\n  .l { color: #586e75; } /* Literal */\n  .n { color: #586e75; } /* Name */\n  .o { color: #859900; } /* Operator */\n  .x { color: #cb4b16; } /* Other */\n  .p { color: #586e75; } /* Punctuation */\n  .cm { color: #93a1a1; } /* Comment.Multiline */\n  .cp { color: #859900; } /* Comment.Preproc */\n  .c1 { color: #93a1a1; } /* Comment.Single */\n  .cs { color: #859900; } /* Comment.Special */\n  .gd { color: #2aa198; } /* Generic.Deleted */\n  .ge { color: #586e75; font-style: italic; } /* Generic.Emph */\n  .gr { color: #dc322f; } /* Generic.Error */\n  .gh { color: #cb4b16; } /* Generic.Heading */\n  .gi { color: #859900; } /* Generic.Inserted */\n  .go { color: #586e75; } /* Generic.Output */\n  .gp { color: #586e75; } /* Generic.Prompt */\n  .gs { color: #586e75; font-weight: bold; } /* Generic.Strong */\n  .gu { color: #cb4b16; } /* Generic.Subheading */\n  .gt { color: #586e75; } /* Generic.Traceback */\n  .kc { color: #cb4b16; } /* Keyword.Constant */\n  .kd { color: #22b3eb; } /* Keyword.Declaration */\n  .kn { color: #859900; } /* Keyword.Namespace */\n  .kp { color: #859900; } /* Keyword.Pseudo */\n  .kr { color: #22b3eb; } /* Keyword.Reserved */\n  .kt { color: #dc322f; } /* Keyword.Type */\n  .ld { color: #586e75; } /* Literal.Date */\n  .m { color: #2aa198; } /* Literal.Number */\n  .s { color: #2aa198; } /* Literal.String */\n  .na { color: #586e75; } /* Name.Attribute */\n  .nb { color: #b58900; } /* Name.Builtin */\n  .nc { color: #22b3eb; } /* Name.Class */\n  .no { color: #cb4b16; } /* Name.Constant */\n  .nd { color: #22b3eb; } /* Name.Decorator */\n  .ni { color: #cb4b16; } /* Name.Entity */\n  .ne { color: #cb4b16; } /* Name.Exception */\n  .nf { color: #22b3eb; } /* Name.Function */\n  .nl { color: #586e75; } /* Name.Label */\n  .nn { color: #586e75; } /* Name.Namespace */\n  .nx { color: #586e75; } /* Name.Other */\n  .py { color: #586e75; } /* Name.Property */\n  .nt { color: #22b3eb; } /* Name.Tag */\n  .nv { color: #22b3eb; } /* Name.Variable */\n  .ow { color: #859900; } /* Operator.Word */\n  .w { color: #586e75; } /* Text.Whitespace */\n  .mf { color: #2aa198; } /* Literal.Number.Float */\n  .mh { color: #2aa198; } /* Literal.Number.Hex */\n  .mi { color: #2aa198; } /* Literal.Number.Integer */\n  .mo { color: #2aa198; } /* Literal.Number.Oct */\n  .sb { color: #93a1a1; } /* Literal.String.Backtick */\n  .sc { color: #2aa198; } /* Literal.String.Char */\n  .sd { color: #586e75; } /* Literal.String.Doc */\n  .s2 { color: #2aa198; } /* Literal.String.Double */\n  .se { color: #cb4b16; } /* Literal.String.Escape */\n  .sh { color: #586e75; } /* Literal.String.Heredoc */\n  .si { color: #2aa198; } /* Literal.String.Interpol */\n  .sx { color: #2aa198; } /* Literal.String.Other */\n  .sr { color: #dc322f; } /* Literal.String.Regex */\n  .s1 { color: #2aa198; } /* Literal.String.Single */\n  .ss { color: #2aa198; } /* Literal.String.Symbol */\n  .bp { color: #22b3eb; } /* Name.Builtin.Pseudo */\n  .vc { color: #22b3eb; } /* Name.Variable.Class */\n  .vg { color: #22b3eb; } /* Name.Variable.Global */\n  .vi { color: #22b3eb; } /* Name.Variable.Instance */\n  .il { color: #2aa198; } /* Literal.Number.Integer.Long */\n}\n",
		"/* ==========================================================================\n   Responsive Embed\n   Credit: Nicolas Gallagher and SUIT CSS.\n\n   <!-- 16:9 aspect ratio -->\n   <div class=\"embed-responsive embed-responsive-16by9\">\n     <iframe class=\"embed-responsive-item\" src=\"...\"></iframe>\n   </div>\n\n   <!-- 4:3 aspect ratio -->\n   <div class=\"embed-responsive embed-responsive-4by3\">\n     <iframe class=\"embed-responsive-item\" src=\"...\"></iframe>\n   </div>\n   ========================================================================== */\n\n.embed-responsive {\n  display: block;\n  position: relative;\n  width: 100%;\n  margin-bottom: 1.5rem;\n  padding: 0;\n  overflow: hidden;\n\n  &::before {\n    display: block;\n    content: '';\n  }\n\n  .embed-responsive-item,\n  iframe,\n  embed,\n  object,\n  video {\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    border: 0;\n  }\n}\n\n.embed-responsive-21by9 {\n\n  &::before {\n    padding-top: percentage(9 / 21);\n  }\n}\n\n.embed-responsive-16by9 {\n\n  &::before {\n    padding-top: percentage(9 / 16);\n  }\n}\n\n.embed-responsive-4by3 {\n\n  &::before {\n    padding-top: percentage(3 / 4);\n  }\n}\n\n.embed-responsive-1by1 {\n\n  &::before {\n    padding-top: percentage(1 / 1);\n  }\n}\n",
		"@import 'utilities/accessibility';\n@import 'utilities/align';\n@import 'utilities/clearfix';\n@import 'utilities/float';\n@import 'utilities/text';\n",
		"/* ==========================================================================\n   Accessibility Modules\n   ========================================================================== */\n\n/* Text meant only for screen readers */\n.screen-reader-text,\n.screen-reader-text span,\n.screen-reader-shortcut {\n  position: absolute !important;\n  width: 1px;\n  height: 1px;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  overflow: hidden;\n\n  &:focus {\n    display: block;\n    top: 5px;\n    left: 5px;\n    width: auto;\n    height: auto;\n    padding: 0.75em 1em;\n    clip: auto !important;\n    border-radius: 0.125em;\n    background-color: $base-color;\n    color: #fff;\n    font-weight: bold;\n    line-height: normal;\n    text-decoration: none;\n    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\n    z-index: 100000;\n  }\n}\n\n.screen-reader-text:focus,\n.screen-reader-shortcut:focus {\n  width: auto;\n  height: auto;\n  clip: auto !important;\n  text-decoration: none;\n  box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.6);\n  z-index: 100000;\n}\n",
		"/* ==========================================================================\n   Alignment\n   ========================================================================== */\n\n.align-baseline { vertical-align: baseline !important; } /* Browser default */\n.align-top { vertical-align: top !important; }\n.align-middle { vertical-align: middle !important; }\n.align-bottom { vertical-align: bottom !important; }\n.align-text-bottom { vertical-align: text-bottom !important; }\n.align-text-top { vertical-align: text-top !important; }\n\n/*\n   Image Alignment\n   ========================================================================== */\n\n.align-center,\ndiv.align-center,\na img.align-center {\n  display: block;\n  margin-right: auto;\n  margin-left: auto;\n}\n\nfigure.align-center {\n\n  img {\n    display: block;\n    margin-right: auto;\n    margin-left: auto;\n  }\n\n  figcaption {\n    text-align: center;\n  }\n}\n\n.align-right,\na img.align-right {\n  margin-bottom: 1rem;\n  margin-left: 1rem;\n  float: right;\n}\n\n.align-left,\na img.align-left {\n  margin-right: 1rem;\n  margin-bottom: 1rem;\n  float: left;\n}\n\n/*\n   Sidebar Pusher\n   ========================================================================== */\n\n.is--pushed {\n  transform: translateX(1 * $sidebar-width);\n  transform-origin: right;\n\n  @include breakpoint($large) {\n    transform: translateX(1.5 * $sidebar-width);\n  }\n}\n",
		"//\n// Clearfix\n//\n\n.clearfix {\n  @include clearfix();\n}\n",
		"/* ==========================================================================\n   Floats\n   ========================================================================== */\n\n.float-left { @include float-left; }\n.float-right { @include float-right; }\n.float-none { @include float-none; }\n",
		"/* ==========================================================================\n   Text\n   ========================================================================== */\n\n/*\n   Alignment\n   ========================================================================== */\n\n.text-justify { text-align: justify !important; }\n.text-nowrap { white-space: nowrap !important; }\n.text-left { text-align: left !important; }\n.text-right { text-align: right !important; }\n.text-center { text-align: center !important; }\n\n/*\n   Transformation\n   ========================================================================== */\n\n.text-lowercase { text-transform: lowercase !important; }\n.text-uppercase { text-transform: uppercase !important; }\n.text-capitalize { text-transform: capitalize !important; }\n.text-truncate { @include text-truncate; }\n\n/*\n   Sizing\n   ========================================================================== */\n\n.small { font-size: 80%; }\n",
		"/* ==========================================================================\n   PRINT STYLES\n   ========================================================================== */\n\n@media print {\n\n  [hidden] {\n    display: none;\n  }\n\n  * {\n    -moz-box-sizing: border-box;\n    -webkit-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  html {\n    margin: 0;\n    padding: 0;\n    height: auto;\n    min-height: auto !important;\n    font-size: 16px;\n  }\n\n  body {\n    margin: 0;\n    height: auto;\n    background: #fff !important;\n    color: #000 !important;\n    font-size: 1rem;\n    line-height: 1.5;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    text-rendering: optimizeLegibility;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-top: 0;\n    margin-bottom: 0.75rem;\n    color: #000;\n    line-height: 1.2;\n  }\n\n  h1 {\n    font-size: 2.5rem;\n  }\n\n  h2 {\n    font-size: 2rem;\n  }\n\n  h3 {\n    font-size: 1.75rem;\n  }\n\n  h4 {\n    font-size: 1.5rem;\n  }\n\n  h5 {\n    font-size: 1.25rem;\n  }\n\n  h6 {\n    font-size: 1rem;\n  }\n\n  a {\n    background: none;\n    color: #000;\n    text-decoration: underline;\n    word-wrap: break-word;\n  }\n\n  table {\n    border-collapse: collapse;\n  }\n\n  thead {\n    display: table-header-group;\n  }\n\n  table,\n  th,\n  td {\n    border-bottom: 1px solid #000;\n  }\n\n  td,\n  th {\n    padding: 8px 16px;\n  }\n\n  img {\n    display: block;\n    max-width: 100% !important;\n    border: 0;\n    vertical-align: middle;\n  }\n\n  hr {\n    height: 0;\n    margin: 2.25rem 0;\n    padding: 0;\n    border: 0;\n    border-bottom: 2px solid #bbb;\n  }\n\n  dt {\n    font-weight: bold;\n  }\n\n  dd {\n    margin: 0;\n    margin-bottom: 0.75rem;\n  }\n\n  abbr[title],\n  acronym[title] {\n    border: 0;\n    text-decoration: none;\n  }\n\n  table,\n  blockquote,\n  pre,\n  code,\n  figure,\n  li,\n  hr,\n  ul,\n  ol,\n  a,\n  tr {\n    page-break-inside: avoid;\n  }\n\n  h2,\n  h3,\n  h4,\n  p,\n  a {\n    orphans: 3;\n    widows: 3;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    page-break-after: avoid;\n    page-break-inside: avoid;\n  }\n\n  h1 + p,\n  h2 + p,\n  h3 + p {\n    page-break-before: avoid;\n  }\n\n  img {\n    page-break-after: auto;\n    page-break-before: auto;\n    page-break-inside: avoid;\n  }\n\n  pre {\n    white-space: pre-wrap !important;\n    word-wrap: break-word;\n  }\n\n  a[href^='http://']::after,\n  a[href^='https://']::after,\n  a[href^='ftp://']::after {\n    font-size: 80%;\n    content: ' (' attr(href) ')';\n  }\n\n  abbr[title]::after,\n  acronym[title]::after {\n    content: ' (' attr(title) ')';\n  }\n\n  .wrapper {\n    min-height: auto !important;\n  }\n\n  #main {\n    max-width: 100%;\n  }\n\n  .inner {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    max-width: 100%;\n  }\n\n  .intro-actions .btn {\n    color: #fff;\n    background: #000;\n  }\n\n  .page-break,\n  .page-break-before {\n    page-break-before: always;\n  }\n\n  .page-break-after {\n    page-break-after: always;\n  }\n\n  .no-print {\n    display: none;\n  }\n\n  a.no-reformat::after {\n    content: '';\n  }\n\n  abbr[title].no-reformat::after,\n  acronym[title].no-reformat::after {\n    content: '';\n  }\n\n  .btn {\n    background: none;\n    color: #000;\n  }\n\n/*\n   Hide the following elements on print\n   ========================================================================== */\n\n  .skip-links,\n  .sidebar-toggle-wrapper,\n  .sidebar,\n  .title-area,\n  .pager,\n  .site-footer,\n  .adsbygoogle {\n    display: none !important;\n    height: 1px;\n  }\n}\n"
	],
	"names": [],
	"mappings": "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"
}